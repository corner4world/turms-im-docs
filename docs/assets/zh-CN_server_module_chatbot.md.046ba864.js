import{_ as a,o as t,c as s,U as e}from"./chunks/framework.95a60cb2.js";const D=JSON.parse('{"title":"聊天机器人","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/server/module/chatbot.md","filePath":"zh-CN/server/module/chatbot.md"}'),r={name:"zh-CN/server/module/chatbot.md"},o=e(`<h1 id="聊天机器人" tabindex="-1">聊天机器人 <a class="header-anchor" href="#聊天机器人" aria-label="Permalink to &quot;聊天机器人&quot;">​</a></h1><h2 id="turms-plugin-rasa" tabindex="-1">turms-plugin-rasa <a class="header-anchor" href="#turms-plugin-rasa" aria-label="Permalink to &quot;turms-plugin-rasa&quot;">​</a></h2><h3 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h3><p>turms-plugin-rasa是一个基于开源对话式AI框架<a href="https://rasa.com" target="_blank" rel="noreferrer">Rasa</a>而开发的turms-service聊天机器人实现插件。</p><p>turms-plugin-rasa的工作流程很简单，即：将用户发送的消息转发给Rasa服务端，等Rasa服务端返回响应后，Turms服务端再将响应以消息的形式发送给用户。</p><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><ul><li><a href="https://rasa.com/docs/rasa/installation/installing-rasa-open-source" target="_blank" rel="noreferrer">Rasa服务端安装</a></li><li><a href="https://turms-im.github.io/docs/zh-CN/server/development/plugin#%E6%8F%92%E4%BB%B6%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F" target="_blank" rel="noreferrer">插件的加载方式</a></li></ul><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><table><thead><tr><th>配置项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>turms-plugin.rasa.enabled</td><td>true</td><td>是否启动插件</td></tr><tr><td>turms-plugin.rasa.instances[?].chatbot-user-id</td><td>0</td><td>当用户发送消息给该用户ID时，将消息转发给Rasa服务端</td></tr><tr><td>turms-plugin.rasa.instances[?].url</td><td><code>http://localhost:5005/webhooks/rest/webhook</code></td><td>用于接收用户消息的Rasa服务端地址</td></tr><tr><td>turms-plugin.rasa.instances[?].request.timeoutMillis</td><td>60_000</td><td>请求超时时长（毫秒）</td></tr><tr><td>turms-plugin.rasa.instances[?].response.format</td><td><code>PLAIN</code></td><td>为<code>PLAIN</code>时，Rasa服务端响应中的<code>text</code>文本字段将会被直接作为消息，发送给用户；<br>为<code>JSON</code>时，Rasa服务端响应会先被序列化成JSON格式文本，再作为消息，发送给用户。JSON具体格式见下文。</td></tr><tr><td>turms-plugin.rasa.instances[?].response.delimiter</td><td><code>\\n</code></td><td>当上述<code>format</code>为<code>PLAIN</code>，且用户发送给Rasa服务端一条消息，而Rasa服务端返回多个响应时，使用该字符串作为响应<code>text</code>文本字段之间的分隔符</td></tr><tr><td>turms-plugin.rasa.instances[?].response.persist</td><td><code>DEFAULT</code></td><td>是否存储基于Rasa服务端响应生成的消息。<br>为<code>TRUE</code>时，表示存储；<br>为<code>FALSE</code>时，表示不存储；<br>为<code>DEFAULT</code>时，表示基于属性<code>turms.service.message.persist-message</code>判断；</td></tr></tbody></table><p>发送给用户的消息的JSON文本格式为：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;string&gt;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">image</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;string&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre></div>`,11),n=[o];function l(d,c,p,i,u,h){return t(),s("div",null,n)}const b=a(r,[["render",l]]);export{D as __pageData,b as default};
