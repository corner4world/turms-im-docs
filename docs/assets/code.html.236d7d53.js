import{_ as c,r as o,o as i,c as u,a as n,b as a,d as s,e as t}from"./app.17e49b9f.js";const l={},r=n("h1",{id:"\u6E90\u7801",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6E90\u7801","aria-hidden":"true"},"#"),s(" \u6E90\u7801")],-1),d=n("p",null,"\u672C\u6587\u8BB2\u89E3Turms\u670D\u52A1\u7AEF\u7684\u5305\u7ED3\u6784\u4E0E\u5404\u4E3B\u8981\u529F\u80FD\u6A21\u5757\u7684\u5927\u81F4\u6E90\u7801\u5B9E\u73B0\uFF0C\u4EE5\u5E2E\u5FD9\u5F00\u53D1\u8005\u66F4\u5FEB\u5730\u9605\u8BFB\u6E90\u7801\u4E0E\u7406\u89E3\u76F8\u5173\u6D41\u7A0B\u3002",-1),k=n("p",null,"\u63D0\u9192\uFF1A",-1),v=s("Turms\u670D\u52A1\u7AEF\u91CD\u5EA6\u4F7F\u7528"),m={href:"https://projectreactor.io/docs/core/release/reference",target:"_blank",rel:"noopener noreferrer"},f=s("reactor-core"),b=s("\u8FD9\u4E00\u54CD\u5E94\u5F0F\u6846\u67B6\uFF0C\u672C\u6587\u9ED8\u8BA4\u8BFB\u8005\u5DF2\u7ECF\u719F\u7EC3\u638C\u63E1\u54CD\u5E94\u5F0F\u7F16\u7A0B\uFF0C\u5982\u679C\u8BFB\u8005\u8FD8\u6CA1\u638C\u63E1\u54CD\u5E94\u5F0F\u7F16\u7A0B\uFF0C\u5219\u5EFA\u8BAE\u5148\u81EA\u884C\u5B66\u4E60\u5E76\u638C\u63E1"),h={href:"https://projectreactor.io/docs/core/release/reference",target:"_blank",rel:"noopener noreferrer"},g=s("reactor-core"),y=s("\u3002"),R=n("li",null,"Turms\u4F1A\u4E0D\u5B9A\u671F\u4F18\u5316\u4EE3\u7801\uFF0C\u4E00\u4E9B\u51FD\u6570\u540D\u6216\u51FD\u6570\u5B9E\u73B0\u53EF\u80FD\u4F1A\u7A0D\u5FAE\u6539\u53D8\uFF0C\u4F46\u5176\u601D\u60F3\u662F\u4E0D\u4F1A\u53D8\u7684\u3002",-1),q=n("li",null,[s("\u5404\u6A21\u5757\u6E90\u7801\u6240\u505A\u7684\u4E8B\u60C5\u901A\u5E38\u6BD4\u4E0B\u6587\u8BB2\u5F97\u591A\u5F97\u591A\uFF0C\u4F46\u4E3A\u4E86\u65B9\u4FBF\u8BFB\u8005\u7406\u89E3\uFF0C"),n("strong",null,"\u672C\u6587\u53EA\u6311\u9009\u4E3B\u8981\u6D41\u7A0B\u8FDB\u884C\u8BB2\u89E3\uFF0C\u5E76\u7565\u53BB\u4E86\u5927\u91CF\u7EC6\u8282"),s("\u3002\u5982\u679C\u8BFB\u8005\u5BF9\u5176\u4E2D\u7684\u7EC6\u8282\u611F\u5174\u8DA3\uFF0C\u53EF\u4EE5\u5728\u9605\u8BFB\u5B8C\u672C\u6587\u7684\u76F8\u5173\u8BB2\u89E3\uFF0C\u5E76\u5BF9\u4E3B\u8981\u6D41\u7A0B\u6709\u5927\u6982\u7684\u8BA4\u8BC6\u540E\uFF0C\u518D\u53BB\u9605\u8BFB\u6E90\u7801\uFF0C\u4E86\u89E3\u5176\u5177\u4F53\u5B9E\u73B0\u7EC6\u8282\u3002")],-1),S=t('<h2 id="\u9879\u76EE\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u9879\u76EE\u7ED3\u6784" aria-hidden="true">#</a> \u9879\u76EE\u7ED3\u6784</h2><p>\u6211\u4EEC\u5E38\u8BF4\u4EE3\u7801\u5373\u6587\u6863\uFF0C\u4EE3\u7801\u53EF\u4EE5\u8BA9\u8BFB\u8005\u4ECE\u5FAE\u89C2\u89C6\u89D2\u4E86\u89E3\u5404\u529F\u80FD\u7684\u5B9E\u73B0\u7EC6\u8282\u4E0E\u903B\u8F91\u5173\u7CFB\uFF0C\u800C\u5305\u5219\u50CF\u662F\u6587\u6863\u7684\u76EE\u5F55\u3002\u597D\u7684\u5206\u5305\u5E94\u8BE5\u5728\u5B8F\u89C2\u4E0A\u6E05\u6670\u5730\u5C55\u793A\u201C\u6587\u6863\u201D\u7684\u5C42\u6B21\u4E0E\u7ED3\u6784\uFF0C\u4EE5\u4FBF\u4E8E\u8BFB\u8005\u7406\u89E3\u3002\u672C\u6587\u8BB2\u89E3Turms\u670D\u52A1\u7AEF\u7684\u5305\u7ED3\u6784\uFF0C\u4EE5\u5E2E\u5FD9\u5F00\u53D1\u8005\u66F4\u597D\u5730\u7406\u89E3\u5305\u4E4B\u95F4\u7684\u5173\u7CFB\u4E0E\u5C42\u6B21\u3002</p><h3 id="\u80CC\u666F-\u62D3\u5C55\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u80CC\u666F-\u62D3\u5C55\u5185\u5BB9" aria-hidden="true">#</a> \u80CC\u666F\uFF08\u62D3\u5C55\u5185\u5BB9\uFF09</h3><p>\u4E0D\u7BA1\u662F\u4EC0\u4E48\u6837\u7684\u5206\u5305\u7406\u5FF5\uFF0C\u5176\u5B9E\u57FA\u7840\u7684\u5206\u5305\u7C7B\u522B\u5C31\u53EA\u6709\u56DB\u79CD\uFF1A\u6309\u7279\u6027\u5206\uFF08Feature\uFF09\u3001\u6309\u7C7B\u578B\u5206\uFF08Type\uFF09\u3001\u6309\u5C42\u5206\uFF08Layer\uFF09\u4E0E\u4E0D\u5206\u5305\uFF0C\u5404\u79CD\u4E0A\u5C42\u7684\u8BBE\u8BA1\u7406\u5FF5\u53EA\u662F\u5BF9\u8FD9\u4E9B\u57FA\u7840\u5206\u5305\u7C7B\u522B\u7684\u4E0D\u540C\u7EC4\u5408\u3002</p><p>\u53E6\u5916\u5C31\u7B97\u662F\u540C\u4E00\u4E2A\u9879\u76EE\uFF0C\u5176\u5728\u4E0D\u540C\u7684\u53D1\u5C55\u9636\u6BB5\u901A\u5E38\u4E5F\u662F\u4F1A\u9002\u7528\u4E0D\u540C\u7684\u5305\u7ED3\u6784\u3002\u6211\u4EEC\u7ECF\u5E38\u8BF4\u67B6\u6784\u662F\u6F14\u8FDB\u5F0F\u53D1\u5C55\u7684\uFF0C\u5305\u5206\u7C7B\u5176\u5B9E\u4E5F\u9700\u8981\u6F14\u8FDB\u5F0F\u53D1\u5C55\u3002\u6BD4\u5982\u8BF4Turms\u670D\u52A1\u7AEF\u5728\u65E9\u671F\u9636\u6BB5\uFF0C\u4E00\u5171\u4E5F\u6CA1\u51E0\u4E2A\u6A21\u5757\uFF0C\u800C\u6309\u4ECA\u5929Turms\u670D\u52A1\u7AEF\u7ED9\u4E00\u5806\u6A21\u5757\u5206\u5305\u7684\u601D\u8DEF\u53BB\u7ED9\u65E9\u671FTurms\u670D\u52A1\u7AEF\u505A\u5305\u7ED3\u6784\u8BBE\u8BA1\uFF0C\u90A3\u7ED3\u679C\u5C31\u662F\uFF1A\u5305\u7ED3\u6784\u53EF\u8BFB\u6027\u4E0D\u5347\u53CD\u964D\uFF0C\u4E3A\u4E86\u8BBE\u8BA1\u800C\u8BBE\u8BA1\uFF0C\u5373\u8FC7\u5EA6\u8BBE\u8BA1\u3002</p><h3 id="\u5206\u5305\u76EE\u6807-\u62D3\u5C55\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u5206\u5305\u76EE\u6807-\u62D3\u5C55\u5185\u5BB9" aria-hidden="true">#</a> \u5206\u5305\u76EE\u6807\uFF08\u62D3\u5C55\u5185\u5BB9\uFF09</h3><p>\u505A\u5206\u5305\u8BBE\u8BA1\u65F6\u5FC5\u987B\u8981\u6709\u660E\u786E\u76EE\u6807\uFF0C\u4E0D\u7136\u5F88\u5BB9\u6613\u9677\u5165\u5230<code>\u4E3A\u4E86\u5957\u67D0\u79CD\u5305\u8BBE\u8BA1\uFF0C\u800C\u5F3A\u884C\u5206\u5305</code>\u7684\u60C5\u51B5\uFF0C\u8BF8\u5982\u4E00\u4E9B\u9879\u76EEService\u5C42\u5148\u5199\u63A5\u53E3\u7C7B\u518D\u5199\u5B9E\u73B0\u7C7B\uFF0C\u800C\u4E0D\u53BB\u601D\u8003\u8BBE\u8BA1\u89C4\u8303\u4E2D\u4E3A\u4EC0\u4E48\u9700\u8981\u8FD9\u6837\u7684\u63A5\u53E3\uFF0C\u53C8\u6216\u8005\u5F3A\u884C\u5957\u7528DDD\u5206\u5C42\u6A21\u677F\uFF0C\u800C\u4E0D\u53BB\u601D\u8003\u4E00\u4E9B\u8BBE\u8BA1\u662F\u4E0D\u662F\u5DF2\u7ECF\u4E25\u91CD\u8FDD\u80CC\u7EA6\u5B9A\u4FD7\u6210\u7684\u60EF\u4F8B\u4E86\uFF0C\u5BFC\u81F4\u7F16\u7A0B\u65F6\u53CD\u800C\u675F\u624B\u675F\u811A\u3002</p><p>Turms\u670D\u52A1\u7AEF\u9879\u76EE\u7684\u5206\u5305\u4E3B\u8981\u76EE\u6807\u6709\uFF1A</p><ul><li>\u5C3D\u91CF\u4FDD\u8BC1\u529F\u80FD\u7279\u6027\u6A21\u5757\u7684\u9AD8\u5185\u805A\uFF0C\u964D\u4F4E\u6A21\u5757\u7684\u590D\u6742\u5EA6\u3002\u8FD9\u70B9\u4E3B\u8981\u662F\u51FA\u4E8E\u4EE3\u7801\u7684\u53EF\u7EF4\u62A4\u6027\u8003\u8651\uFF0C\u4EE5\u907F\u514D\u9677\u5165\u975E\u5E38\u5E38\u89C1\u7684<code>\u6309\u7279\u6027+\u6309\u7C7B\u578B\u7684\u6DF7\u5408\u8BBE\u8BA1</code>\u6216<code>\u6309\u7279\u6027+\u6309\u7C7B\u578B+\u6309\u5206\u5C42\u7684\u6DF7\u5408\u8BBE\u8BA1</code>\uFF0C\u56E0\u4E3A\u6DF7\u5408\u8BBE\u8BA1\u65E2\u4F1A\u8BA9\u4EE3\u7801\u7684\u5F52\u5C5E\u95EE\u9898\u53D8\u5F97\u6A21\u68F1\u4E24\u53EF\uFF0C\u53C8\u4E5F\u4F1A\u56E0\u4E3A\u4E00\u5C42\u5305\u4E0B\u4F7F\u7528\u4E86\u4E0D\u540C\u7684\u5206\u5305\u7B56\u7565\u800C\u964D\u4F4E\u5305\u7ED3\u6784\u7684\u53EF\u8BFB\u6027\uFF0C\u4E0D\u5229\u4E8E\u957F\u671F\u7EF4\u62A4\u3002</li><li>\u5C3D\u91CF\u4FDD\u8BC1\u4E1A\u52A1\u5B50\u57DF\u7684\u72EC\u7ACB\u6027\u3002\u8FD9\u70B9\u4E3B\u8981\u662F\u4E3A\u4E86\u5212\u6E05\u4E1A\u52A1\u8FB9\u754C\uFF0C\u8BA9\u5404\u6A21\u5757\u6613\u8BFB\u4E0E\u6613\u6539\uFF08\u989D\u5916\u4E00\u63D0\uFF0Cturms-service\u672A\u6765\u4F1A\u652F\u6301\u4EE5\u5404\u79CD\u4E1A\u52A1\u57DF\u7EC4\u5408\u5F62\u6001\u505A\u90E8\u7F72\uFF0C\u4E3E\u4F8B\u6765\u8BF4\uFF0Cturms-service\u672A\u6765\u65E2\u53EF\u4EE5\u90E8\u7F72\u6210\u7528\u6237\u4E1A\u52A1\u57DF\u7684\u670D\u52A1\uFF0C\u4E5F\u53EF\u4EE5\u90E8\u7F72\u6210\u6D88\u606F\u4E1A\u52A1\u57DF\u7684\u670D\u52A1\uFF0C\u4E5F\u53EF\u4EE5\u90E8\u7F72\u6210\u7528\u6237+\u6D88\u606F\u4E1A\u52A1\u57DF\u7684\u670D\u52A1\u7B49\u7B49\uFF09\u3002</li><li>\u652F\u6491\u57DF\u7684\u529F\u80FD\u7279\u6027\u6A21\u5757\u4E0E\u4E1A\u52A1\u6A21\u5757\u4E00\u5B9A\u8981\u5206\u5F00\u3002\u8FD9\u70B9\u4E3B\u8981\u662F\u4E3A\u4E86\u5212\u6E05\u95EE\u9898\u57DF\u4E0E\u652F\u6491\u57DF\u7684\u8FB9\u754C\u3002</li><li>\u5C3D\u91CF\u8BA9\u5F00\u53D1\u8005\u901A\u8FC7\u5305\u7ED3\u6784\u5C31\u80FD\u63A8\u6D4B\u5305\u7684\u4E0A\u4E0B\u6E38\u5173\u7CFB\u3002\u8FD9\u70B9\u4E3B\u8981\u51FA\u4E8E\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\u8003\u8651\uFF0C\u5728\u957F\u671F\u7684\u7F16\u7A0B\u5B9E\u8DF5\u4E2D\uFF0C\u5F53\u6211\u4EEC\u770B\u5230\u4E2D\u5927\u578B\u9879\u76EE\u7684\u5305\u7ED3\u6784\u4E0D\u505A\u5206\u5C42\u7684\u4EE3\u7801\uFF0C\u90A3\u6211\u4EEC\u53EF\u80FD\u5C31\u5F97\u81EA\u5DF1\u7FFB\u51E0\u904D\u5305\u6216\u4EE3\u7801\uFF0C\u624D\u63A8\u6D4B\u53EF\u80FD\u7684\u5305\u4E0A\u4E0B\u6E38\u5173\u7CFB\u3002</li><li>\u5728\u80FD\u4FDD\u8BC1\u903B\u8F91\u6E05\u6670\u7684\u60C5\u51B5\u4E0B\uFF0C\u5C3D\u91CF\u8BA9\u5305\u7684\u5C42\u6B21\u5C11\u4E00\u70B9\u3002</li></ul><p>\u53E6\u5916\uFF0C\u5728\u9605\u8BFB\u5404\u79CD\u4F18\u79C0\u5F00\u6E90\u9879\u76EE\u7684\u5305\u7ED3\u6784\u65F6\uFF0C\u6211\u4EEC\u4F1A\u53D1\u73B0\u5927\u90E8\u5206\u77E5\u540D\u7684\u4E2D\u5927\u578B\u5F00\u6E90\u670D\u52A1\u7AEF\u9879\u76EE\u53EF\u80FD\u538B\u6839\u5C31\u4E0D\u505A\u5206\u5C42\u8BBE\u8BA1\uFF0C\u5E76\u4E14\u901A\u5E38\u662F\u4EE5<code>\u6309\u529F\u80FD\u7279\u6027\u5206\u5305\u4E3A\u4E3B\uFF0C\u4EE5\u6309\u7C7B\u578B\u5206\u5305\u4E3A\u8F85</code>\u505A\u6DF7\u5408\u8BBE\u8BA1\uFF0C\u53C8\u6216\u8005\u662F\u6309\u7167\u5E38\u89C4\u7684MVC\u6216DDD\u5206\u5C42\u8BBE\u8BA1\u3002\u5BF9\u4E8E\u8FD9\u4E9B\u5206\u5305\u601D\u8DEF\uFF0C\u6211\u4EEC\u4E00\u822C\u4F1A\u8BC4\u4EF7\u201C\u4E2D\u89C4\u4E2D\u77E9\uFF0C\u7B26\u5408\u60EF\u4F8B\uFF0C\u4F46\u5DEE\u5F3A\u4EBA\u610F\u201D\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u5E76\u6CA1\u6709\u5F88\u597D\u7684\u6EE1\u8DB3\u4E0A\u8FF0\u7684<code>\u5206\u5305\u76EE\u6807</code>\uFF0C\u5F88\u591A\u5F00\u53D1\u8005\u5728\u9605\u8BFB\u8FD9\u4E9B\u9879\u76EE\u7684\u6E90\u7801\u65F6\u4E5F\u4F1A\u9677\u5165\u5230\u201C\u4E0D\u77E5\u9053\u4ECE\u54EA\u8BFB\u8D77\u201D\u7684\u60C5\u51B5\uFF0C\u7F16\u7801\u65F6\u4E5F\u4F1A\u7ECF\u5E38\u9047\u5230\u4EE3\u7801\u6A21\u68F1\u4E24\u53EF\u7684\u5F52\u5C5E\u95EE\u9898\u3002</p><h3 id="\u5206\u5305\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5206\u5305\u601D\u8DEF" aria-hidden="true">#</a> \u5206\u5305\u601D\u8DEF</h3><p>\u5404\u79CD\u5206\u5305\u7406\u5FF5\u901A\u5E38\u53EA\u662F\u5728\u7406\u60F3\u573A\u666F\u4E0B\u63D0\u4F9B\u4E86\u79CD\u601D\u8DEF\uFF0C\u5207\u4E0D\u53EF\u76F4\u63A5\u76F2\u76EE\u5957\u7528\u3002\u6211\u4EEC\u5728\u7ED9Turms\u670D\u52A1\u7AEF\u8BBE\u8BA1\u5305\u7ED3\u6784\u65F6\uFF0C\u4E3B\u8981\u53C2\u8003\uFF1A\u5404\u79CD\u5206\u5305\u7684\u8BBE\u8BA1\u7406\u5FF5\u3001\u4F18\u79C0\u5F00\u6E90\u9879\u76EE\u7684\u5B9E\u8DF5\u4E0E\u5B9E\u9645\u6548\u679C\u3001\u7EA6\u5B9A\u4FD7\u6210\u7684\u60EF\u4F8B\u3001\u9879\u76EE\u89C4\u6A21\u3001\u9879\u76EE\u7C7B\u578B\u3001\u5305\u7684\u89C4\u6A21\u3001\u957F\u671F\u7684\u7F16\u7A0B\u5B9E\u8DF5\u7684\u4F53\u4F1A\u3002</p><p>\u56E0\u6B64\uFF0C\u5404\u79CD\u5206\u5305\u7406\u5FF5\u53EA\u662F\u201C\u53C2\u8003\u5EFA\u8BAE\u201D\uFF0C\u5B9E\u64CD\u65F6\u5230\u5E95\u662F\u8981\u9760\u957F\u671F\u7F16\u7A0B\u7684\u5B9E\u8DF5\u4E0E\u4F53\u4F1A\uFF0C\u5224\u65AD\u5404\u79CD\u8BBE\u8BA1\u9002\u4E0D\u9002\u5408Turms\u9879\u76EE\u7684\u5B9E\u9645\u60C5\u51B5\uFF0C\u5E76\u5BF9\u5404\u79CD\u5206\u5305\u7406\u5FF5\u505A\u4E86\u53D6\u957F\u8865\u77ED\uFF0C\u8BFB\u8005\u4E5F\u53EF\u4EE5\u4ECETurms\u670D\u52A1\u7AEF\u9879\u76EE\u7684\u5305\u7ED3\u6784\u4E2D\u770B\u5230\u5F88\u591A\u8BBE\u8BA1\u7406\u5FF5\u3001\u751A\u81F3\u662F\u57FA\u4E8EDDD\u5FAE\u670D\u52A1\u8BBE\u8BA1\u7684\u5F71\u5B50\u3002\u5177\u4F53\u800C\u8A00\uFF0CTurms\u670D\u52A1\u7AEF\u7684\u5206\u5305\u793A\u610F\u56FE\u5982\u4E0B\uFF1A</p>',13),C=t('<p>\u4E0A\u56FE\u6846\u91CC\u7684\u540D\u79F0\u5C31\u662F\u5B9E\u9645Turms\u670D\u52A1\u7AEF\u4E2D\u5305\u7684\u540D\u79F0\uFF0C\u5176\u8FDE\u7EBF\u5C31\u662F\u5305\u4E0E\u5305\u4E4B\u95F4\u7684\u903B\u8F91\u5173\u7CFB\u3002\u5176\u4E2D\uFF1A</p><p>\u7B2C\u4E00\u5C42\u6309\u5C42\u6765\u5206\u5305\uFF0C\u5206\u522B\u662F<code>access</code>\u3001<code>domain</code>\u3001<code>storage</code>\u4E0E<code>infra</code>\u8FD9\u56DB\u5C42\uFF0C\u5176\u4E2D\uFF1A</p><ul><li><p>access\uFF1A\u63A5\u5165\u5C42\uFF0C\u8D1F\u8D23\u7BA1\u7406\u5458\u4E0E\u5BA2\u6237\u7AEF\u7684\u4F1A\u8BDD\u7BA1\u7406\u4E0E\u8BF7\u6C42\u8C03\u5EA6\u3002\u8BE5\u5C42\u4F1A\u5C06\u7528\u6237\u8BF7\u6C42\u5206\u53D1\u7ED9<code>domain</code>\u5C42\u7684<code>access</code>\u5C42\u3002</p></li><li><p>domain\uFF1A\u4E1A\u52A1\u57DF\u5C42\uFF0C\u8D1F\u8D23\u5904\u7406\u5404\u79CD\u4E1A\u52A1\u57DF\u76F8\u5173\u7684\u903B\u8F91\u3002domain\u5C42\u5185\u90E8\u6309\u7167\u5E38\u89C1\u7684\u5206\u5C42\u5206\u5305\u8BBE\u8BA1\uFF0C\u5206\u4E3A<code>access</code>\u3001<code>service</code>\u4E0E<code>repository</code>\u4E09\u5C42\u3002</p><ul><li><p>\u5176\u4E2D\uFF0C\u76F8\u5BF9\u6BD4\u8F83\u7279\u522B\u7684\u662F<code>domain</code>\u5C42\u4E2D\u7684<code>access</code>\u5C42\u3002\u56E0\u4E3A<code>service</code>\u7684\u4E0A\u5C42\u4E0D\u4EC5\u6709\u8C03\u5EA6\u7BA1\u7406\u5458HTTP\u8BF7\u6C42\u7684Controller\u5C42<code>admin</code>\uFF0C\u8FD8\u6709\u8C03\u5EA6\u5BA2\u6237\u7AEF\u8BF7\u6C42\u7684Controller\u5C42<code>client</code>\u6216<code>servicerequest</code>\uFF08\u5BF9\u4E8Eturms-gateway\u6765\u8BF4\u662F<code>client</code>\u5305\uFF0C\u800C\u5BF9\u4E8Eturms-service\u6765\u8BF4\u662F<code>servicerequest</code>\u5305\uFF09\u3002\u4E8C\u8005\u5171\u4EABService\u5C42\uFF0C\u56E0\u6B64\u4F7F\u7528\u4E00\u4E2A\u5355\u72EC\u7684<code>accecss</code>\u5C42\u6765\u6DB5\u76D6\u8FD9\u4E24\u5C42\u3002</p></li><li><p>\u5173\u4E8E\u4E3A\u4EC0\u4E48\u8981\u5355\u72EC\u62BD\u4E2A<code>model</code>\u51FA\u6765</p><p>\u50CF\u662F\u4E0A\u56FE\u4E2D<code>dto</code>\uFF08Data Transfer Object\uFF09/<code>bo</code>\uFF08Business Object\uFF09/<code>po</code>\uFF08Persistent Object\uFF09\u90FD\u662F\u8D2B\u8840\u6A21\u578B\uFF0C\u53EA\u6709<code>model</code>\u662F\u5145\u8840\u6A21\u578B\uFF0C\u5B83\u4EEC\u4E0D\u4EC5\u8981\u5B58\u50A8\u72B6\u6001\uFF08\u6570\u636E\uFF09\uFF0C\u8FD8\u81EA\u5E26\u4E9B\u884C\u4E3A\uFF08\u903B\u8F91\uFF09\uFF0C\u7528\u4E8E\u5904\u7406\u5404\u79CD\u9AD8\u5185\u805A\u7684\u903B\u8F91\uFF0C\u6BD4\u8F83\u7279\u522B\uFF0C\u56E0\u6B64\u5355\u72EC\u5206\u5305\u3002</p></li><li><p>\u5173\u4E8E<code>rpc</code>\u5305</p><p>\u4E00\u4E9B\u57DF\uFF08domain\uFF09\u5177\u6709\u5B83\u81EA\u5DF1\u72EC\u6709\u7684RPC\u8BF7\u6C42\uFF0C\u5219\u8FD9\u4E9BRPC\u8BF7\u6C42\u90FD\u4F1A\u88AB\u5F52\u5230\u8BE5\u57DF\u4E0B\u3002\u5982<code>Session</code>\u57DF\u4E0B\u7684<code>im.turms.server.common.domain.session.rpc.SetUserOfflineRequest</code>\u8FD9\u4E00RPC\u8BF7\u6C42\u3002</p><p>\u989D\u5916\u4E00\u63D0\uFF0C\u96C6\u7FA4RPC\u7684\u5B9E\u73B0\u5728<code>im.turms.server.common.infra.cluster.service.rpc</code>\u5305\u4E0B\u3002</p></li></ul></li><li><p>storage\uFF1A\u5B58\u50A8\u5C42\uFF0C\u63D0\u4F9BMongoDB\u5BA2\u6237\u7AEF\u7BA1\u7406\u4E0ERedis\u5BA2\u6237\u7AEF\u7BA1\u7406\uFF0C\u5206\u522B\u5BF9\u5E94<code>mongo</code>\u5305\u4E0E<code>redis</code>\u5305\u3002</p></li><li><p>infra\uFF1A\u57FA\u7840\u670D\u52A1\u5C42\uFF0C\u8D1F\u8D23\u4E3A<code>access</code>\u4E0E<code>domain</code>\u5C42\u63D0\u4F9B\u57FA\u7840\u529F\u80FD\u5B9E\u73B0\uFF0C\u5982\u65E5\u5FD7\u5904\u7406\u3001\u914D\u7F6E\u7BA1\u7406\u7B49\u3002infra\u5C42\u5185\u90E8\u6309\u7167\u529F\u80FD\u7279\u6027\u5206\u5305\u3002</p></li></ul><p>\u7EFC\u4E0A\uFF0CTurms\u670D\u52A1\u7AEF\u7684\u5206\u5305\u5176\u5B9E\u8BBE\u8BA1\u5F97\u5F88\u5DE7\u5999\uFF1A</p><ul><li>\u901A\u8FC7<code>access</code>\u3001<code>domain</code>\u3001<code>storage</code>\u4E0E<code>infra</code>\u8FD9\u56DB\u5C42\uFF0C\u5F00\u53D1\u8005\u53EF\u4EE5\u57FA\u4E8E\u5DF2\u638C\u63E1\u7684MVC\u5206\u5C42\u77E5\u8BC6\uFF0C\u5FEB\u901F\u7406\u89E3Turms\u670D\u52A1\u7AEF\u7684\u6E90\u7801\u5C42\u6B21\uFF0C\u5E76\u80FD\u6839\u636E\u5305\u540D\u6E05\u695A\u5730\u660E\u767D\u6BCF\u5C42\u5305\u8DDF\u7528\u6237\u4F1A\u8BDD\u4E0E\u7528\u6237\u8BF7\u6C42\u662F\u4EC0\u4E48\u5173\u7CFB\u3002</li><li>\u800C<code>domain</code>\u5C42\u7684\u5404\u4E1A\u52A1\u57DF\u53C8\u53EF\u4EE5\u5E2E\u52A9\u5F00\u53D1\u8005\u5FEB\u901F\u533A\u5206\u5404Turms\u670D\u52A1\u7AEF\u6709\u54EA\u4E9B\u4E1A\u52A1\u57DF\u3002\u800C\u6BCF\u4E2A\u57DF\u7684\u5185\u90E8\u53C8\u57FA\u4E8E\u5E38\u89C1\u7684MVC\u5206\u5C42\u8BBE\u8BA1\uFF0C\u5F00\u53D1\u8005\u53EF\u4EE5\u57FA\u4E8E\u4EE5\u5F80\u77E5\u8BC6\uFF0C\u5FEB\u901F\u7406\u89E3\u4E00\u4E2A\u4E1A\u52A1\u57DF\u7684\u5185\u90E8\u4E0A\u4E0B\u6E38\u903B\u8F91\u5173\u7CFB\u3002</li><li><code>infra</code>\u5C42\u53C8\u53EF\u4EE5\u5E2E\u52A9\u5F00\u53D1\u8005\u7406\u89E3Turms\u670D\u52A1\u7AEF\u7684\u652F\u6491\u57DF\u5177\u4F53\u5305\u62EC\u54EA\u4E9B\u529F\u80FD\u6A21\u5757\u3002</li></ul><p>\u56E0\u6B64\u8FD9\u6837\u7684\u5206\u5305\u5C42\u6B21\u5176\u5B9E\u662F\u6BD4\u8F83\u6E05\u6670\u7684\uFF0C\u6709\u5229\u4E8E\u957F\u671F\u7EF4\u62A4\u3002\u53E6\u5916\uFF0C\u8BFB\u8005\u53EF\u80FD\u5DF2\u7ECF\u4ECE\u4E0A\u8FF0\u7684\u5206\u5305\u5B9E\u8DF5\u4E2D\uFF0C\u770B\u51FA\u4E86\u5F88\u591A\u5206\u5305\u7406\u5FF5\u7684\u5F71\u5B50\uFF0C\u800CTurms\u53EA\u662F\u53C2\u8003\u8FD9\u4E9B\u7406\u5FF5\u505A\u7684\u8BBE\u8BA1\uFF0C\u5E76\u4E0D\u9700\u8981\u9075\u5FAA\u8FD9\u4E9B\u5206\u5305\u7406\u5FF5\u3002</p><p>\u8865\u5145\uFF1A</p><ul><li>\u5173\u4E8E\u4E3A\u4EC0\u4E48\u4E0D\u628A\u7B2C\u4E00\u5C42\u5305\u62C6\u5206\u6210\u6A21\u5757\uFF08Java Modules\uFF09\uFF0C\u8FD9\u662F\u56E0\u4E3A\u73B0\u9636\u6BB5\u65E2\u6CA1\u5206\u6A21\u5757\u7684\u5FC5\u8981\uFF0C\u5206\u6A21\u5757\u8FD8\u4F1A\u589E\u52A0\u9879\u76EE\u7ED3\u6784\u7684\u590D\u6742\u5EA6\uFF0C\u5982\u65E0\u5FC5\u8981\uFF0C\u52FF\u589E\u5B9E\u4F53\u3002</li><li>Turms\u670D\u52A1\u7AEF\u7684\u8D2B\u8840\u6A21\u578B\u5927\u90E8\u5206\u662F\u7528Java\u7684<code>record</code>\u8868\u793A\u7684\uFF0C\u4F46\u8FD8\u6709\u4E9B\u8D2B\u8840\u6A21\u578B\u56E0\u4E3A\u6027\u80FD\u539F\u56E0\uFF08\u6539\u52A8\u4E00\u4E2A\u5B57\u6BB5\u662F\u5426\u9700\u8981\u91CD\u65B0new\u4E2A\u65B0\u5BF9\u8C61\uFF09\uFF0C\u4ECD\u7528<code>class</code>\u8868\u793A\u3002</li></ul><h3 id="\u8BF7\u6C42\u5904\u7406\u5728\u5305\u4E4B\u95F4\u7684\u6D41\u8F6C\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u8BF7\u6C42\u5904\u7406\u5728\u5305\u4E4B\u95F4\u7684\u6D41\u8F6C\u8FC7\u7A0B" aria-hidden="true">#</a> \u8BF7\u6C42\u5904\u7406\u5728\u5305\u4E4B\u95F4\u7684\u6D41\u8F6C\u8FC7\u7A0B</h3><p>\u8BFB\u8005\u5728\u7406\u89E3\u4E0A\u6587\u7684Turms\u5206\u5305\u8BBE\u8BA1\u4E4B\u540E\uFF0C\u5E94\u8BE5\u5DF2\u7ECF\u80FD\u5BF9Turms\u670D\u52A1\u7AEF\u7684\u8BF7\u6C42\u5904\u7406\u6D41\u7A0B\u6709\u6BD4\u8F83\u6E05\u6670\u7684\u8BA4\u8BC6\u4E86\u3002\u8FD9\u91CC\u4EE5\u6700\u7ECF\u5178\u7684\u201C\u5BA2\u6237\u7AEF\u767B\u9646\u201D\u4E3A\u4F8B\uFF0C\u5E76\u4EE5\u5305\u7684\u89C6\u89D2\u7B80\u8981\u5730\u4E32\u8BB2\u76F8\u5173\u6D41\u7A0B\uFF08\u8BFB\u8005\u53EF\u7ED3\u5408\u4E0A\u8FF0\u7684\u5206\u5305\u793A\u610F\u56FE\u8FDB\u884C\u9605\u8BFB\uFF09\uFF0C\u5E2E\u5FD9\u8BFB\u8005\u66F4\u6E05\u6670\u5730\u7406\u89E3\u5305\u7684\u5206\u5C42\u8BBE\u8BA1\u3002</p><ul><li><p>\u5BA2\u6237\u7AEF\u767B\u9646\u65F6\uFF0C\u9996\u5148\u8981\u4E0Eturms-gateway\u670D\u52A1\u7AEF\u5EFA\u7ACB\u7EAFTCP\u6216WebSocket\u8FDE\u63A5\uFF0C\u6B64\u65F6\u5904\u7406\u7F51\u7EDC\u8FDE\u63A5\u7684\u662F<code>access</code>\u5C42\uFF0C\u56E0\u4E3A\u5B83\u662F\u5BA2\u6237\u7AEF\u8FDE\u63A5\uFF0C\u56E0\u6B64\u662F<code>access/client</code>\u5C42\uFF08\u800C\u4E0D\u662F<code>access/admin</code>\uFF09\u3002</p></li><li><p>\u5EFA\u7ACB\u5B8C\u7F51\u7EDC\u8FDE\u63A5\u540E\uFF0C\u5BA2\u6237\u7AEF\u53D1\u9001\u7ED9turms-gateway\u767B\u9646\u8BF7\u6C42\u65F6\uFF0Cturms-gateway\u4F1A\u5C06\u89E3\u6790\u540E\u7684\u8BF7\u6C42\u7ECF\u7531<code>access</code>\u5C42\u4F20\u9012\u7ED9<code>domain/session/access/client/controller</code>\u5C42\u7684Controller\u8FDB\u884C\u5904\u7406\uFF0CController\u518D\u5C06\u5177\u4F53\u4E1A\u52A1\u903B\u8F91\u4EA4\u7531<code>domain/session/access/client/service</code>\u5C42\u7684Service\u8FDB\u884C\u5904\u7406\uFF0C\u800CService\u53C8\u4F1A\u5C06\uFF1A1. \u76F8\u5173\u7684MongoDB\u6570\u636E\u5E93\u7684\u67E5\u8BE2\u64CD\u4F5C\uFF0C\u4EA4\u7531<code>domain/session/access/client/repository</code>\u5C42\u7684Repository\u8FDB\u884C\u5904\u7406\uFF0CRepository\u53EA\u662F\u5BF9\u76F8\u5173CRUD\u8BED\u53E5\u7684\u62FC\u63A5\uFF0C\u800C\u8FD9\u4E9B\u8BED\u53E5\u53C8\u4F1A\u4F20\u9012\u7ED9<code>storage/mongo</code>\u8FD9\u5C42\u7684MongoDB\u5BA2\u6237\u7AEF\u5B9E\u73B0\uFF0C\u5B83\u4EEC\u4F1A\u5411MongoDB\u670D\u52A1\u7AEF\u53D1\u9001\u6700\u7EC8\u7684\u8BF7\u6C42\uFF1B2. \u76F8\u5173\u7684Redis\u64CD\u4F5C\u5219\u4EA4\u7531<code>storage/redis</code>\u8FD9\u5C42\u5904\u7406\u3002</p><p>\u7B49\u8BF7\u6C42\u5904\u7406\u5B8C\u6BD5\uFF0C\u5219\u901A\u8FC7\u56DE\u8C03\u5E76\u6839\u636E\u5305\u7684\u4E0A\u4E0B\u6E38\u5173\u7CFB\uFF0C\u4F9D\u6B21\u8FD4\u56DE\u3002</p></li><li><p>\u800C\u5BF9\u4E8E<code>infra</code>\u8FD9\u5C42\u4E0E\u5176\u4ED6\u5404\u79CD\u5B50\u5305\uFF0C\u7EDD\u5927\u90E8\u5206\u4E5F\u5C31\u662F\u4E3A\u4E0A\u9762\u7684\u5404\u5C42\u63D0\u4F9B\u5404\u79CD\u80FD\u529B\u7684\u652F\u6301\uFF0C\u5982<code>infra/logging</code>\u65E5\u5FD7\u5305\u4E0E<code>infra/cluster</code>\u96C6\u7FA4\u5B9E\u73B0\u5305\u3002</p></li></ul><p>\u5176\u4ED6\u5404\u7C7B\u8BF7\u6C42\uFF08\u7BA1\u7406\u5458HTTP\u8BF7\u6C42\u3001\u5BA2\u6237\u7AEF\u57FA\u4E8ETCP/WebSocket\u8FDE\u63A5\u7684\u4E1A\u52A1\u8BF7\u6C42\uFF09\u7684\u5904\u7406\u6D41\u7A0B\u4E5F\u5927\u81F4\u540C\u4E0A\uFF0C\u8BFB\u8005\u53EF\u4EE5\u81EA\u884C\u4E3E\u4E00\u53CD\u4E09\u3002</p><p>\u4E0B\u9762\u7684\u7BC7\u7AE0\u4F1A\u7EE7\u7EED\u4EE5\u66F4\u4E3A\u7EC6\u81F4\u7684\u6E90\u7801\u89C6\u89D2\uFF0C\u5BF9\u5BA2\u6237\u7AEF\u8BF7\u6C42\u7684\u5904\u7406\u6D41\u7A0B\u8FDB\u884C\u8BB2\u89E3\u3002</p><h2 id="\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5904\u7406\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5904\u7406\u6D41\u7A0B" aria-hidden="true">#</a> \u5BA2\u6237\u7AEF\u8BF7\u6C42\u5904\u7406\u6D41\u7A0B</h2>',14),w=s("\u9605\u8BFB\u4E0B\u6587\u524D\uFF0C\u5EFA\u8BAE\u8BFB\u8005\u5148\u884C\u9605\u8BFB"),E={href:"https://turms-im.github.io/docs/for-developers/architecture.html#%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A0%87%E5%87%86%E6%B5%81%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"},T=s("\u5BA2\u6237\u7AEF\u8BBF\u95EE\u670D\u52A1\u7AEF\u6807\u51C6\u6D41\u7A0B"),A=s("\uFF0C\u5148\u4ECE\u67B6\u6784\u89D2\u5EA6\u7406\u89E3\u5176\u80CC\u540E\u7684\u8BBE\u8BA1\u601D\u8DEF\uFF0C\u8FD9\u6837\u5728\u8BFB\u6E90\u7801\u7684\u65F6\u5019\u5C31\u4E0D\u5BB9\u6613\u201C\u8FF7\u8DEF\u201D\u3002"),_=n("p",null,[s("\u8BF7\u6C42\u6A21\u578B\uFF1A"),n("code",null,"im.turms.server.common.access.client.dto.request.TurmsRequest")],-1),B=n("p",null,[s("\u54CD\u5E94\u4E0E\u901A\u77E5\u6A21\u578B\uFF1A"),n("code",null,"im.turms.server.common.access.client.dto.notification.TurmsNotification")],-1),N=n("h3",{id:"uml\u987A\u5E8F\u56FE",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uml\u987A\u5E8F\u56FE","aria-hidden":"true"},"#"),s(" UML\u987A\u5E8F\u56FE")],-1),x=t(`<h3 id="turms-gateway" tabindex="-1"><a class="header-anchor" href="#turms-gateway" aria-hidden="true">#</a> turms-gateway</h3><p>\u7B80\u4ECB\uFF1A\u7528\u4E8E\u7EF4\u62A4\u4E0E\u5BA2\u6237\u7AEF\u7684\u7F51\u7EDC\u8FDE\u63A5\uFF0C\u7EF4\u62A4\u5E94\u7528\u5C42\u4F1A\u8BDD\uFF0C\u5E76\u5C06\u5927\u90E8\u5206\u7684\u4E1A\u52A1\u8BF7\u6C42\u4E0B\u53D1\u7ED9turms-service\u670D\u52A1\u7AEF\u3002</p><h4 id="\u7F51\u7EDC\u5C42\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u7F51\u7EDC\u5C42\u914D\u7F6E" aria-hidden="true">#</a> \u7F51\u7EDC\u5C42\u914D\u7F6E</h4><ol><li><p>\u542F\u52A8\u63A5\u6536\u5BA2\u6237\u7AEF\u8BF7\u6C42\u7684\u670D\u52A1\u7AEF</p><p>TCP\u670D\u52A1\u7AEF\uFF1A<code>im.turms.gateway.access.client.tcp.TcpServerFactory#create</code></p><p>WebSocket\u670D\u52A1\u7AEF\uFF1A<code>im.turms.gateway.access.client.websocket.WebSocketServerFactory#create</code></p><p>\u8FD9\u4E24\u4E2A\u51FD\u6570\u4E3B\u8981\u505A\u7684\u5C31\u662F\uFF1A\u57FA\u4E8E<code>reactor-netty</code>\u5E93\uFF0C\u7ED1\u5B9A\u670D\u52A1\u7AEF\u7684\u76D1\u542C\u5730\u5740\u3001\u914D\u7F6EEventLoop\u7EBF\u7A0B\u6C60\u3001\uFF08\u53EF\u9009\uFF09\u914D\u7F6ESSL\u3001\u5F00\u542F\u76F8\u5173\u5EA6\u91CF\u7B49\u5E38\u89C4\u670D\u52A1\u7AEF\u76F8\u5173\u5DE5\u4F5C\u3002</p></li><li><p>\u5BF9\u4E8E\u7EAFTCP\u8FDE\u63A5\uFF08\u800C\u975E\u9884\u5907\u7684WebSocket\u8FDE\u63A5\uFF09\uFF0C\u7ED9\u65B0\u786E\u7ACB\u7684TCP\u8FDE\u63A5\u7ED1\u4E0A\u7F16\u89E3\u7801Handlers</p><p>\u5728<code>im.turms.gateway.access.client.tcp.TcpServerFactory#create</code>\u51FD\u6570\u5185\uFF0C\u901A\u8FC7\u4E0B\u8FF0\u56DE\u8C03\uFF0C\u7ED9\u65B0TCP\u8FDE\u63A5\u7ED1\u4E0A\u5BF9\u5E94\u7684<code>TurmsRequest</code>\u4E0E<code>TurmsNotification</code>\u7684\u7F16\u89E3\u7801\u5B9E\u4F8B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token function">doOnConnection</span><span class="token punctuation">(</span>connection <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Inbound</span>
    connection<span class="token punctuation">.</span><span class="token function">addHandlerLast</span><span class="token punctuation">(</span><span class="token string">&quot;varintLengthBasedFrameDecoder&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CodecFactory</span><span class="token punctuation">.</span><span class="token function">getExtendedVarintLengthBasedFrameDecoder</span><span class="token punctuation">(</span>maxFrameLength<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Outbound</span>
    connection<span class="token punctuation">.</span><span class="token function">addHandlerLast</span><span class="token punctuation">(</span><span class="token string">&quot;varintLengthFieldPrepender&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CodecFactory</span><span class="token punctuation">.</span><span class="token function">getVarintLengthFieldPrepender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    connection<span class="token punctuation">.</span><span class="token function">addHandlerLast</span><span class="token punctuation">(</span><span class="token string">&quot;protobufFrameEncoder&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CodecFactory</span><span class="token punctuation">.</span><span class="token function">getProtobufFrameEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5BF9\u4E8EWebSocket\u8FDE\u63A5\uFF0C\u5219\u5148\u76D1\u542C\u5E76\u6821\u9A8CHTTP Upgrade\u8BF7\u6C42\uFF0C\u7136\u540E\u518DUpgrade\u6210WebSocket\u8FDE\u63A5</p><p>\u5728<code>im.turms.gateway.access.client.websocket.WebSocketServerFactory#create</code>\u51FD\u6570\u5185\uFF0C\u901A\u8FC7\u4E0B\u8FF0\u4EE3\u7801\u7ED1\u5B9AHTTP\u76D1\u542C\u56DE\u8C03\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>.handle(getHttpRequestHandler(handler, serverSpec))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5176\u4E2D<code>getHttpRequestHandler</code>\u51FD\u6570\u6765\u81EA<code>im.turms.gateway.access.client.websocket.WebSocketServerFactory#getHttpRequestHandler</code>\uFF0C\u8BE5\u56DE\u8C03\u7528\u4E8E\u6821\u9A8CHTTP\u8BF7\u6C42\uFF0C\u5982\u679C\u76D1\u542C\u5230\u662F\u5408\u6CD5\u7684HTTP Upgrade\u8BF7\u6C42\uFF0C\u5219\u5C06\u8BE5\u8FDE\u63A5\u5347\u7EA7\u4E3AWebSocket\u8FDE\u63A5\u3002</p></li></ol><p>\u81F3\u6B64\uFF0C\u7EAF\u7F51\u7EDC\u5C42\u7684\u64CD\u4F5C\u57FA\u672C\u5C31\u5B8C\u6210\u4E86\uFF0C\u4E0B\u4E00\u6B65\u5C31\u662F\u8854\u63A5\u7F51\u7EDC\u5C42\u4E0E\u4E1A\u52A1\u903B\u8F91\u5C42\u3002</p><h4 id="\u7F51\u7EDC\u5C42\u4E0E\u4E1A\u52A1\u903B\u8F91\u5C42\u7684\u8854\u63A5" tabindex="-1"><a class="header-anchor" href="#\u7F51\u7EDC\u5C42\u4E0E\u4E1A\u52A1\u903B\u8F91\u5C42\u7684\u8854\u63A5" aria-hidden="true">#</a> \u7F51\u7EDC\u5C42\u4E0E\u4E1A\u52A1\u903B\u8F91\u5C42\u7684\u8854\u63A5</h4><ol><li><p>\u7F51\u7EDC\u5C42\u4E0E\u4E1A\u52A1\u903B\u8F91\u5C42\uFF0C\u901A\u8FC7\u51FD\u6570\u63A5\u53E3\uFF1A<code>im.turms.gateway.access.client.common.connection.ConnectionListener#onAdded</code>\u8FDB\u884C\u7ED1\u5B9A\uFF0C\u4E3B\u8981\u7ED1\u5B9A\u7684\u5185\u5BB9\u5C31\u662F\uFF1ATCP\u8FDE\u63A5\u7684\u8F93\u5165\u5B57\u8282\u6D41\u3001\u8F93\u51FA\u5B57\u8282\u6D41\u3001\u5173\u95ED\u65F6\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u5BF9\u4E8ETCP\u670D\u52A1\u7AEF\uFF0C\u5728<code>im.turms.gateway.access.client.tcp.TcpServerFactory#create</code>\u51FD\u6570\u4E0B\uFF0C\u901A\u8FC7<code>.handle((in, out) -&gt; connectionListener.onAdded((Connection) in, false, in.receive(), out, ((Connection) in).onDispose()))</code>\u8FDB\u884C\u7ED1\u5B9A\u3002</p><p>\u5BF9\u4E8EWebSocket\u670D\u52A1\u7AEF\uFF0C\u5728<code>im.turms.gateway.access.client.websocket.WebSocketServerFactory#create</code>\u51FD\u6570\u4E0B\uFF0C\u901A\u8FC7<code>connectionListener.onAdded((Connection) in, true, inbound, out, onClose)</code>\u7ED1\u5B9A\u3002</p></li><li><p>\u4E0A\u8FF0<code>connectionListener.onAdded</code>\u4F1A\u8C03\u7528\u4E0B\u8FF0\u7684<code>UserSessionAssembler#bindConnectionWithSessionWrapper</code>\u56DE\u8C03\u51FD\u6570\uFF0C\u7528\u4E8E\u534F\u8C03\u5904\u7406\u8F93\u5165\u5B57\u8282\u6D41\u4E0E\u8F93\u51FA\u5B57\u8282\u6D41\u7684\u903B\u8F91\uFF0C\u800C\u4ECE\u5168\u5C40\u89C6\u89D2\u6765\u770B\uFF0C\u8FD9\u4E9B\u5B57\u8282\u6570\u636E\u672C\u8D28\u4E0A\u5C31\u662F\u4E0A\u5C42\u4E1A\u52A1\u5C42\u7684<code>\u8BF7\u6C42</code>\u3001<code>\u54CD\u5E94</code>\u4E0E<code>\u901A\u77E5</code>\uFF0C\u56E0\u6B64\u8FD9\u90E8\u5206\u4EE3\u7801\u662F\u670D\u52A1\u7AEF\u4E0E\u5BA2\u6237\u7AEF\u4EA4\u4E92\u7684\u91CD\u70B9\uFF0C\u6211\u4EEC\u4E4B\u540E\u8FD8\u4F1A\u56DE\u770B\u8FD9\u5757\u4EE3\u7801\u3002\u5176\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ConnectionListener</span> <span class="token function">bindConnectionWithSessionWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>connection<span class="token punctuation">,</span> isWebSocketConnection<span class="token punctuation">,</span> in<span class="token punctuation">,</span> out<span class="token punctuation">,</span> onClose<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">InetSocketAddress</span> address <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InetSocketAddress</span><span class="token punctuation">)</span> connection<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">NetConnection</span> netConnection <span class="token operator">=</span> <span class="token function">createConnection</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">UserSessionWrapper</span> sessionWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserSessionWrapper</span><span class="token punctuation">(</span>netConnection<span class="token punctuation">,</span> address<span class="token punctuation">,</span> closeIdleConnectionAfterSeconds<span class="token punctuation">,</span>
                userSession <span class="token operator">-&gt;</span> userSession<span class="token punctuation">.</span><span class="token function">setNotificationConsumer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">,</span> tracingContext<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    turmsNotificationBuffer<span class="token punctuation">.</span><span class="token function">touch</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    turmsNotificationBuffer <span class="token operator">=</span> turmsNotificationBuffer<span class="token punctuation">.</span><span class="token function">duplicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">NettyOutbound</span> outbound <span class="token operator">=</span> isWebSocketConnection
                            <span class="token operator">?</span> out<span class="token punctuation">.</span><span class="token function">sendObject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BinaryWebSocketFrame</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token operator">:</span> out<span class="token punctuation">.</span><span class="token function">sendObject</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>outbound<span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> <span class="token function">handleConnectionError</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> netConnection<span class="token punctuation">,</span> userSession<span class="token punctuation">,</span> tracingContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">respondToRequests</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> isWebSocketConnection<span class="token punctuation">,</span> in<span class="token punctuation">,</span> out<span class="token punctuation">,</span> sessionWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">tryRemoveSessionInfoOnConnectionClosed</span><span class="token punctuation">(</span>onClose<span class="token punctuation">,</span> sessionWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C<code>userSession.setNotificationConsumer</code>\u7528\u4E8E\u8BBE\u7F6E\u76D1\u542C<code>\u901A\u77E5</code>\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u8BE5\u56DE\u8C03\u51FD\u6570\u4F1A\u5C06\u63A5\u6536\u5230\u7684<code>\u901A\u77E5</code>\u5B57\u8282\u6570\u636E\uFF0C\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\u3002\u8FD9\u4E2A\u56DE\u8C03\u51FD\u6570\u4E5F\u662F\u91CD\u70B9\uFF0C\u56E0\u4E3A\u6211\u4EEC\u4E4B\u540E\u8BB2\u5230\u7684turms-service\u7ED9turms-gateway\u53D1\u9001<code>\u901A\u77E5</code>\u7684\u6D41\u7A0B\uFF0C\u5176\u6700\u7EC8\u4F1A\u56DE\u5230\u8FD9\u91CC\u3002</p><p>\u800C<code>respondToRequests</code>\u51FD\u6570\u5219\u7528\u4E8E\u76D1\u542C<code>\u8BF7\u6C42</code>\u8F93\u5165\u5B57\u8282\u6D41\uFF0C\u5E76\u5728\u4E0B\u6E38\u4EE3\u7801\u5904\u7406\u5B8C<code>\u8BF7\u6C42</code>\u540E\uFF0C\u8F6C\u53D1\u5176\u8FD4\u56DE\u7684<code>\u54CD\u5E94</code>\u8F93\u51FA\u5B57\u8282\u6D41\u3002\u8BE5\u51FD\u6570\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">respondToRequests</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection<span class="token punctuation">,</span>
                       <span class="token keyword">boolean</span> isWebSocketConnection<span class="token punctuation">,</span>
                       <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ByteBuf</span><span class="token punctuation">&gt;</span></span> in<span class="token punctuation">,</span>
                       <span class="token class-name">NettyOutbound</span> out<span class="token punctuation">,</span>
                       <span class="token class-name">UserSessionWrapper</span> sessionWrapper<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    in
            <span class="token punctuation">.</span><span class="token function">doOnNext</span><span class="token punctuation">(</span>requestData <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>connection<span class="token punctuation">.</span><span class="token function">isDisposed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                requestData<span class="token punctuation">.</span><span class="token function">retain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">TracingContext</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TracingContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                clientRequestDispatcher<span class="token punctuation">.</span><span class="token function">handleRequest</span><span class="token punctuation">(</span>sessionWrapper<span class="token punctuation">,</span> requestData<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">onErrorResume</span><span class="token punctuation">(</span>throwable <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                            ctx<span class="token punctuation">.</span><span class="token function">updateThreadContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token function">handleNotificationError</span><span class="token punctuation">(</span>throwable<span class="token punctuation">,</span> sessionWrapper<span class="token punctuation">.</span><span class="token function">getUserSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>turmsNotificationBuffer <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                            turmsNotificationBuffer<span class="token punctuation">.</span><span class="token function">touch</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            turmsNotificationBuffer <span class="token operator">=</span> turmsNotificationBuffer<span class="token punctuation">.</span><span class="token function">duplicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token class-name">NettyOutbound</span> outbound <span class="token operator">=</span> isWebSocketConnection
                                    <span class="token operator">?</span> out<span class="token punctuation">.</span><span class="token function">sendObject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BinaryWebSocketFrame</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>
                                    <span class="token operator">:</span> out<span class="token punctuation">.</span><span class="token function">sendObject</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>outbound<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">contextWrite</span><span class="token punctuation">(</span>context <span class="token operator">-&gt;</span> context<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">TracingContext</span><span class="token punctuation">.</span><span class="token constant">CTX_KEY_NAME</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">doFinally</span><span class="token punctuation">(</span>signal <span class="token operator">-&gt;</span> ctx<span class="token punctuation">.</span><span class="token function">clearThreadContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> <span class="token function">handleConnectionError</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> sessionWrapper<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                sessionWrapper<span class="token punctuation">.</span><span class="token function">getUserSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> <span class="token function">handleConnectionError</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> sessionWrapper<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    sessionWrapper<span class="token punctuation">.</span><span class="token function">getUserSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TracingContext</span><span class="token punctuation">.</span><span class="token constant">NOOP</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C<code>respondToRequests</code>\u5728<code>clientRequestDispatcher.handleRequest(sessionWrapper, requestData)</code>\u5904\uFF0C\u5C06<code>\u8BF7\u6C42</code>\u7684\u5B57\u8282\u6D41<code>ByteBuf</code>\uFF0C\u9012\u4EA4\u7ED9\u4E0B\u6E38\u7684\u4E1A\u52A1\u903B\u8F91\u5C42\u8FDB\u884C\u5904\u7406\uFF1B\u5728<code>.flatMap(turmsNotificationBuffer -&gt; {</code>\u56DE\u8C03\u5904\uFF0C\u5C06\u8BF7\u6C42\u7684<code>\u54CD\u5E94</code>\u5B57\u8282\u6D41\u8FDB\u884C\u8F93\u51FA\u3002</p><p>\u81F3\u6B64\uFF0C\u7F51\u7EDC\u5C42\u7684\u6570\u636E\u5DF2\u7ECF\u4F20\u8FBE\u5230\u4E86\u4E0B\u6E38\u4E1A\u52A1\u5C42\uFF0C\u7F51\u7EDC\u5C42<code>\u63A5\u6536\u8BF7\u6C42</code>\u7684\u5DE5\u4F5C\u7ED3\u675F\u4E86\uFF0C\u63A5\u4E0B\u6765\u5C31\u90FD\u662F\u4E1A\u52A1\u5C42\u76F8\u5173\u64CD\u4F5C\u3002</p><p>\u6CE8\u610F\uFF1A\u867D\u7136\u7F51\u7EDC\u5C42<code>\u63A5\u6536\u8BF7\u6C42</code>\u7684\u5DE5\u4F5C\u7ED3\u675F\u4E86\uFF0C\u4F46\u7F51\u7EDC\u5C42\u4E4B\u540E\u8FD8\u8981\u5904\u7406\u4E0B\u6E38\u4E1A\u52A1\u903B\u8F91\u5C42\u53D1\u56DE\u7684<code>\u54CD\u5E94</code>\u4E0E<code>\u901A\u77E5</code>\u5B57\u8282\u6570\u636E\uFF0C\u800C\u8FD9\u6536\u5C3E\u7684\u4EE3\u7801\uFF0C\u4E0A\u6587\u5DF2\u7ECF\u63D0\u53CA\uFF0C\u5C31\u4E0D\u8D58\u8FF0\u4E86\u3002</p></li></ol><h4 id="\u4E1A\u52A1\u5C42\u2014\u2014\u8BF7\u6C42\u8C03\u5EA6\u5C42" tabindex="-1"><a class="header-anchor" href="#\u4E1A\u52A1\u5C42\u2014\u2014\u8BF7\u6C42\u8C03\u5EA6\u5C42" aria-hidden="true">#</a> \u4E1A\u52A1\u5C42\u2014\u2014\u8BF7\u6C42\u8C03\u5EA6\u5C42</h4><p>\u7ECF\u7531\u7F51\u7EDC\u5C42\u7684\u64CD\u4F5C\uFF0C\u6765\u5230\u4E86<code>im.turms.gateway.access.client.common.ClientRequestDispatcher#handleRequest</code>\u3002\u8BE5\u51FD\u6570\u5B8C\u6210\uFF1A\u8C03\u5EA6\u5FC3\u8DF3\u8BF7\u6C42\u3001\u4E1A\u52A1\u8BF7\u6C42\uFF1B\u7B80\u5355\u6821\u9A8C\u8BF7\u6C42\uFF0C\u5982\u679C\u662F\u975E\u6CD5\u8BF7\u6C42\uFF0C\u5219\u5C1D\u8BD5\u5C01\u7981\u7528\u6237ID\u4E0EIP\u7B49\u3002</p><p>\u8BE5\u51FD\u6570\u7684\u4EE3\u7801\u867D\u591A\uFF0C\u4F46\u5176\u5B9E\u5F88\u5BB9\u6613\u8BFB\uFF0C\u6211\u4EEC\u8FD9\u91CC\u4E3B\u8981\u5173\u6CE8\u7684\u662F<code>handleServiceRequest(sessionWrapper, request, serviceRequestBuffer, tracingContext)</code>\u8FD9\u884C\u4EE3\u7801\uFF0C<code>handleServiceRequest</code>\u51FD\u6570\u7684\u4E3B\u8981\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">return</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token constant">CREATE_SESSION_REQUEST</span> <span class="token operator">-&gt;</span> sessionController
            <span class="token punctuation">.</span><span class="token function">handleCreateSessionRequest</span><span class="token punctuation">(</span>sessionWrapper<span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">createSessionRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>result <span class="token operator">-&gt;</span> <span class="token function">getNotificationFromHandlerResult</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">requestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token constant">DELETE_SESSION_REQUEST</span> <span class="token operator">-&gt;</span> sessionController<span class="token punctuation">.</span><span class="token function">handleDeleteSessionRequest</span><span class="token punctuation">(</span>sessionWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        serviceRequestBuffer<span class="token punctuation">.</span><span class="token function">retain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">yield</span> <span class="token function">handleServiceRequest</span><span class="token punctuation">(</span>sessionWrapper<span class="token punctuation">,</span> request<span class="token punctuation">,</span> serviceRequestBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u5C06<code>CREATE_SESSION_REQUEST</code>\u4E0E<code>DELETE_SESSION_REQUEST</code>\u8FD9\u4E24\u4E2Aturms-gateway\u80FD\u81EA\u884C\u5904\u7406\u7684\u8BF7\u6C42\u4EA4\u7531turms-gateway\u81EA\u5DF1\u7684Controller\u5C42\u8FDB\u884C\u5904\u7406\uFF0C\u5373<code>SessionController</code>\uFF0C\u8BE5Controller\u4E3B\u8981\u5C31\u662F\u501F\u7531<code>im.turms.gateway.domain.session.service.SessionService</code>\u670D\u52A1\u4E0ERedis\u670D\u52A1\u7AEF\u8FDB\u884C\u4EA4\u4E92\uFF0C\u6267\u884C\u7528\u6237<code>\u767B\u9646</code>\u4E0E<code>\u767B\u51FA</code>\u76F8\u5173\u903B\u8F91\u3002\u7531\u4E8E\u4E1A\u52A1\u903B\u8F91\u5E76\u975E\u672C\u7BC7\u7684\u91CD\u70B9\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u5C55\u5F00\u8BB2\u4E86\u3002</p><p>\u7B49\u8FD9Controller\u4E0EService\u7684\u903B\u8F91\u90FD\u5904\u7406\u5B8C\uFF0C\u5219\u8FD4\u56DE\u4E00\u4E2A<code>TurmsNotification</code>\u5BF9\u8C61\uFF0C\u5E76\u7ECF\u7531\u4E0A\u8FF0\u7684\u7F51\u7EDC\u5C42\u4E0E\u7F16\u89E3\u7801Handlers\uFF0C\u6700\u7EC8\u5C06\u5B57\u8282\u6570\u636E\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\u3002</p></li><li><p>\u5BF9\u4E8E\u5176\u4ED6\u6240\u6709\u8BF7\u6C42\uFF0Cturms-gateway\u901A\u8FC7\u4E0A\u8FF0\u7684<code>handleServiceRequest</code>\u51FD\u6570\uFF0C\u6700\u7EC8\u7ECF\u7531RPC\uFF0C\u5C06\u5BA2\u6237\u7AEF\u8BF7\u6C42\u4E0B\u53D1\u7ED9turms-service\u8FDB\u884C\u5904\u7406\u3002\u5176\u4E2D\uFF0C<code>handleServiceRequest</code>\u51FD\u6570\u4F1A\u8C03\u7528<code>node.getRpcService().requestResponse(request)</code>\u901A\u8FC7\u81EA\u7814RPC\u6846\u67B6\uFF0C\u5C06\u5305\u88C5\u6709\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5B57\u8282\u6570\u636E\u7684RPC\u8BF7\u6C42<code>im.turms.server.common.access.servicerequest.rpc.HandleServiceRequest</code>\u4E0B\u53D1\u7ED9turms-service\u8FDB\u884C\u5904\u7406\u3002\u5177\u4F53RPC\u7684\u5B9E\u73B0\u5E76\u975E\u672C\u7BC7\u91CD\u70B9\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u5C55\u5F00\u8BB2\u4E86\u3002</p><p>\u7B49turms-service\u5904\u7406\u5B8C\u8BF7\u6C42\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A<code>im.turms.server.common.access.servicerequest.dto.ServiceResponse</code>\uFF0C\u8BE5\u5BF9\u8C61\u4F1A\u5728\u4E0A\u8FF0\u7684<code>im.turms.gateway.domain.servicerequest.service.ServiceRequestService#handleServiceRequest</code>\u51FD\u6570\u4E2D\uFF0C\u7ECF\u8FC7\u4E0B\u8FF0\u7684<code>getNotificationFromResponse</code>\u51FD\u6570\u5C06<code>ServiceResponse</code>\u8F6C\u6362\u4E3A<code>TurmsNotification</code>\uFF0C\u5E76\u518D\u7ECF\u7531\u4E0A\u8FF0\u7684\u7F51\u7EDC\u5C42\u4E0E\u7F16\u89E3\u7801Handlers\uFF0C\u6700\u7EC8\u5C06\u5B57\u8282\u6570\u636E\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">return</span> node<span class="token punctuation">.</span><span class="token function">getRpcService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">requestResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">defaultIfEmpty</span><span class="token punctuation">(</span><span class="token constant">REQUEST_RESPONSE_NO_CONTENT</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>response <span class="token operator">-&gt;</span> <span class="token function">getNotificationFromResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> serviceRequest<span class="token punctuation">.</span><span class="token function">getRequestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>\u81F3\u6B64\uFF0Cturms-gateway\u7684\u5BA2\u6237\u7AEF\u8BF7\u6C42\u7684\u5904\u7406\u903B\u8F91\u5C31\u8BB2\u89E3\u5B8C\u4E86\uFF0C\u4E0B\u6587\u63A5\u7740\u8BB2\u89E3turms-service\u662F\u5982\u4F55\u5904\u7406\u4E0A\u6E38turms-gateway\u53D1\u6765\u7684RPC\u8BF7\u6C42\u7684\u3002</p><h3 id="turms-service" tabindex="-1"><a class="header-anchor" href="#turms-service" aria-hidden="true">#</a> turms-service</h3><p>\uFF08RPC\u5B9E\u73B0\u5C5E\u4E8E\u201C\u96C6\u7FA4\u670D\u52A1\u201D\u5B9E\u73B0\u5185\u5BB9\uFF0C\u8FD9\u91CC\u4E0D\u505A\u76F8\u5173\u8BB2\u89E3\uFF09</p><ol><li><p>\u8BF7\u6C42\u8C03\u5EA6\u5C42</p><p>\u7ECF\u7531RPC\u5C42\u7684\u5904\u7406\uFF0Cturms-service\u4F1A\u9996\u5148\u901A\u8FC7<code>im.turms.service.access.servicerequest.dispatcher.ServiceRequestDispatcher#dispatch</code>\u62FF\u5230\u5BA2\u6237\u7AEF\u8BF7\u6C42\u7684\u5B57\u8282\u6570\u636E\u3002\u8BE5\u51FD\u6570\u4F1A\u8C03\u7528<code>im.turms.service.access.servicerequest.dispatcher.ServiceRequestDispatcher#dispatch0</code>\u51FD\u6570\uFF0C\u5B8C\u6210\u8BF8\u5982\uFF1A\u8BF7\u6C42\u6821\u9A8C\u3001\u5BA2\u6237\u7AEF\u5C01\u7981\u3001\u5224\u65AD\u670D\u52A1\u7AEF\u76D1\u63A7\u72B6\u6001\u3001\u89E6\u53D1\u63D2\u4EF6\u4E0E\u8C03\u7528Controller\u5C42\u63A5\u53E3\u51FD\u6570\u3001\u89E6\u53D1\u4E0A\u6E38\u7B49\u4EFB\u52A1\u3002</p><p>\u8BE5\u51FD\u6570\u7684\u4EE3\u7801\u867D\u591A\uFF0C\u4F46\u5176\u5B9E\u8FD8\u662F\u6BD4\u8F83\u5BB9\u6613\u8BFB\u7684\uFF0C\u8FD9\u91CC\u6211\u4EEC\u4E3B\u8981\u770B\u5230\u5176\u4E2D\u7684<code>result = result.switchIfEmpty(Mono.defer(() -&gt; handler.handle(lastClientRequest)));</code>\u8FD9\u884C\u4EE3\u7801\uFF0C\u5176\u4E2D\u7684<code>handler#handle</code>\u51FD\u6570\u5176\u5B9E\u5C31\u662F<code>im.turms.service.access.servicerequest.dispatcher.ClientRequestHandler#handle</code>\u51FD\u6570\uFF0C\u800C<code>handle</code>\u51FD\u6570\u7684\u5B9E\u73B0\uFF0C\u4E5F\u5C31\u662F\u5404Controller\u5C42\u63A5\u53E3\u7684\u5B9E\u73B0\u3002</p></li><li><p>\u8BF7\u6C42Controller\u5C42</p><p>\u5404Controller\u901A\u8FC7\u4E0A\u8FF0\u7684<code>handle</code>\u51FD\u6570\uFF0C\u62FF\u5230\u4E86\u4F20\u6765\u7684<code>im.turms.service.access.servicerequest.dto.ClientRequest</code>\u5BF9\u8C61\u540E\uFF0C\u5C31\u5F00\u59CB\u6267\u884C\u76F8\u5173\u7684\u4E1A\u52A1\u903B\u8F91\uFF0C\u5E76\u5411MongoDB\u670D\u52A1\u7AEF\u53D1\u9001\u5404\u79CDCRUD\u8BF7\u6C42\u3002\u4E1A\u52A1\u903B\u8F91\u5904\u7406\u5E76\u975E\u672C\u7BC7\u91CD\u70B9\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u5C55\u5F00\u8BB2\u89E3\u4E86\u3002\u7B49Controller\u5C42\u5904\u7406\u5B8C\u76F8\u5173\u4E1A\u52A1\u903B\u8F91\uFF0C\u5C31\u4F1A\u8FD4\u56DE\u4E00\u4E2A<code>im.turms.service.access.servicerequest.dto.RequestHandlerResult</code>\u5BF9\u8C61\u3002\u7B80\u5355\u6765\u8BF4\uFF0C\u8BE5\u5BF9\u8C61\u63CF\u8FF0\u4E86\uFF1A\u8981\u53D1\u56DE\u7ED9\u5BA2\u6237\u7AEF\u7684<code>\u54CD\u5E94</code>\uFF0C\u4E0E\u8981\u53D1\u7ED9\u5176\u4ED6\u7528\u6237\u7684<code>\u901A\u77E5</code>\uFF08\u6BD4\u5982\uFF1A\u5982\u679C\u8BE5\u8BF7\u6C42\u662F\u53D1\u9001\u7FA4\u804A\u6D88\u606F\u8BF7\u6C42\uFF0C\u90A3\u4E48\u5BF9\u4E8E\u6D88\u606F\u7684\u63A5\u6536\u5BA2\u6237\u7AEF\uFF0C\u8FD9\u4E9B\u53D1\u9001\u7ED9\u5B83\u4EEC\u7684\u8F93\u51FA\u5B57\u8282\u6D41\u5C31\u662F<code>\u901A\u77E5</code>\uFF09\u3002</p><p>\u5BF9\u4E8E<code>\u54CD\u5E94</code>\uFF0C\u4F1A\u501F\u7531\u4E0A\u8FF0\u7684RPC\u64CD\u4F5C\uFF0C\u5C06\u5B57\u8282\u6570\u636E\u53D1\u56DE\u7ED9turms-gateway\uFF0C\u800Cturms-gateway\u518D\u901A\u8FC7\u4E0A\u8FF0\u5DF2\u7ECF\u63D0\u53CA\u8FC7\u7684<code>respondToRequests</code>\u51FD\u6570\u91CC\u7684<code>.flatMap(turmsNotificationBuffer -&gt; {</code>\u56DE\u8C03\u51FD\u6570\uFF0C\u6700\u7EC8\u5C06\u54CD\u5E94\u5B57\u8282\u6570\u636E\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\u3002</p></li></ol><p>\u81F3\u6B64\uFF0C\u4E00\u4E2A\u8BF7\u6C42\u5C31\u88AB\u5904\u7406\u5B8C\u4E86\u3002</p><h2 id="\u901A\u77E5\u4E0B\u53D1" tabindex="-1"><a class="header-anchor" href="#\u901A\u77E5\u4E0B\u53D1" aria-hidden="true">#</a> \u901A\u77E5\u4E0B\u53D1</h2><p>\u901A\u77E5\u6A21\u578B\uFF1A<code>im.turms.server.common.access.client.dto.notification.TurmsNotification</code></p><p><code>\u901A\u77E5</code>\u6709\u4E14\u4EC5\u4F1A\u88ABturms-service\u751F\u6210\uFF0Cturms-gateway\u4E0D\u4F1A\u81EA\u884C\u751F\u6210<code>\u901A\u77E5</code>\uFF0C\u5E76\u4E14\u53EA\u4F1A\u8F6C\u53D1<code>\u901A\u77E5</code>\u3002</p><h3 id="uml\u987A\u5E8F\u56FE-1" tabindex="-1"><a class="header-anchor" href="#uml\u987A\u5E8F\u56FE-1" aria-hidden="true">#</a> UML\u987A\u5E8F\u56FE</h3>`,21),D=t(`<h3 id="turms-service-1" tabindex="-1"><a class="header-anchor" href="#turms-service-1" aria-hidden="true">#</a> turms-service</h3><p>\u5728\u4E0A\u6587\u4E2D\uFF0C\u6211\u4EEC\u8BB2\u5230turms-service\u5728\u5904\u7406\u5B8C\u5BA2\u6237\u7AEF\u8BF7\u6C42\u7684\u4E1A\u52A1\u903B\u8F91\u540E\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A<code>im.turms.service.access.servicerequest.dto.RequestHandlerResult</code>\u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u4E5F\u5305\u542B\u4E86\uFF1A\u901A\u77E5\u6570\u636E\u4E0E\u4E00\u7EC4\u9700\u8981\u63A5\u6536\u901A\u77E5\u7684\u7528\u6237ID\u3002\u8BE5\u5BF9\u8C61\u4F1A\u88AB\u5148\u4F20\u9012\u5230<code>im.turms.service.access.servicerequest.dispatcher.ServiceRequestDispatcher#dispatch0</code>\u51FD\u6570\u91CC\u7684\u4E0B\u8FF0\u56DE\u8C03\u4E2D\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token function">doOnEach</span><span class="token punctuation">(</span>signal <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>signal<span class="token punctuation">.</span><span class="token function">isOnNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">RequestHandlerResult</span> requestResult <span class="token operator">=</span> signal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestResult <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> requestResult<span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">ResponseStatusCode</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">notifyRelatedUsersOfAction</span><span class="token punctuation">(</span>requestResult<span class="token punctuation">,</span> userId<span class="token punctuation">,</span> deviceType<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">contextWrite</span><span class="token punctuation">(</span>signal<span class="token punctuation">.</span><span class="token function">getContextView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">TracingCloseableContext</span> ignored <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">asCloseable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to notify related users of the action&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C<code>notifyRelatedUsersOfAction</code>\u51FD\u6570\u4F1A\u5F02\u6B65\u53D1\u9001<code>\u901A\u77E5</code>\u7ED9\u76F8\u5173\u7528\u6237\uFF0C\u5176\u4EE3\u7801\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">notifyRelatedUsersOfAction</span><span class="token punctuation">(</span>
        <span class="token class-name">RequestHandlerResult</span> result<span class="token punctuation">,</span>
        <span class="token class-name">Long</span> requesterId<span class="token punctuation">,</span>
        <span class="token class-name">DeviceType</span> requesterDevice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TurmsRequest</span> dataForRecipients <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">dataForRecipients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> recipients <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">recipients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataForRecipients <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> recipients<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">TurmsNotification</span> notificationForRecipients <span class="token operator">=</span> <span class="token class-name">TurmsNotification</span>
            <span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setRelayedRequest</span><span class="token punctuation">(</span>dataForRecipients<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setRequesterId</span><span class="token punctuation">(</span>requesterId<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ByteBuf</span> notificationByteBuf <span class="token operator">=</span> <span class="token class-name">ProtoUtil</span><span class="token punctuation">.</span><span class="token function">getDirectByteBuffer</span><span class="token punctuation">(</span>notificationForRecipients<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">forwardDataForRecipientsToOtherSenderOnlineDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        notificationByteBuf<span class="token punctuation">.</span><span class="token function">retain</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> notifyRequesterMono <span class="token operator">=</span> outboundMessageService
                <span class="token punctuation">.</span><span class="token function">forwardNotification</span><span class="token punctuation">(</span>notificationForRecipients<span class="token punctuation">,</span> notificationByteBuf<span class="token punctuation">,</span> requesterId<span class="token punctuation">,</span> requesterDevice<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> notifyRecipientsMono <span class="token operator">=</span> outboundMessageService
                <span class="token punctuation">.</span><span class="token function">forwardNotification</span><span class="token punctuation">(</span>notificationForRecipients<span class="token punctuation">,</span> notificationByteBuf<span class="token punctuation">,</span> recipients<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>notifyRequesterMono<span class="token punctuation">,</span> notifyRecipientsMono<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doFinally</span><span class="token punctuation">(</span>signal <span class="token operator">-&gt;</span> notificationByteBuf<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> outboundMessageService<span class="token punctuation">.</span><span class="token function">forwardNotification</span><span class="token punctuation">(</span>notificationForRecipients<span class="token punctuation">,</span> notificationByteBuf<span class="token punctuation">,</span> recipients<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u4E3B\u8981\u770B<code>outboundMessageService.forwardNotification</code>\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u9996\u5148\u4F1A\u901A\u8FC7<code>im.turms.server.common.domain.session.service.UserStatusService#getDeviceAndNodeIdMapByUserId</code>\u51FD\u6570\u4ECE\u672C\u5730\u7F13\u5B58\u6216\u8005Redis\u670D\u52A1\u7AEF\u4E2D\u62C9\u53D6\u901A\u77E5\u63A5\u6536\u7528\u6237ID\u6240\u5728\u7684turms-gateway\u670D\u52A1\u7AEF\u8282\u70B9ID\uFF0C\u62FF\u5230\u8FD9\u4E9B\u8282\u70B9ID\u540E\uFF0C\u518D\u901A\u8FC7<code>im.turms.service.domain.message.service.OutboundMessageService#forwardClientMessageToNodes(...)</code>\u51FD\u6570\uFF0C\u5C06<code>\u901A\u77E5</code>\u901A\u8FC7RPC\u5B9E\u73B0\uFF0C\u8F6C\u53D1\u7ED9\u8FD9\u4E9B\u8282\u70B9\uFF0C\u8BA9\u5176\u8FDB\u884C\u5177\u4F53\u7684\u901A\u77E5\u4E0B\u53D1\u64CD\u4F5C\u3002\u5177\u4F53\u4EE3\u7801\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">forwardNotification</span><span class="token punctuation">(</span>
        <span class="token class-name">TurmsNotification</span> notificationForLogging<span class="token punctuation">,</span>
        <span class="token class-name">ByteBuf</span> notificationData<span class="token punctuation">,</span>
        <span class="token class-name">Long</span> recipientId<span class="token punctuation">,</span>
        <span class="token class-name">DeviceType</span> excludedDeviceType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> userStatusService<span class="token punctuation">.</span><span class="token function">getDeviceToNodeIdMapByUserId</span><span class="token punctuation">(</span>recipientId<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> notificationData<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>deviceTypeAndNodeIdMap <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> nodeIds <span class="token operator">=</span> <span class="token class-name">CollectionUtil</span><span class="token punctuation">.</span><span class="token function">newSetWithExpectedSize</span><span class="token punctuation">(</span>deviceTypeAndNodeIdMap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DeviceType</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> deviceTypeAndNodeIdMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">DeviceType</span> deviceType <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>deviceType <span class="token operator">!=</span> excludedDeviceType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        nodeIds<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>nodeIds<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    notificationData<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> mono <span class="token operator">=</span> <span class="token function">forwardClientMessageToNodes</span><span class="token punctuation">(</span>notificationData<span class="token punctuation">,</span> nodeIds<span class="token punctuation">,</span> recipientId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token function">tryLogNotification</span><span class="token punctuation">(</span>mono<span class="token punctuation">,</span> notificationForLogging<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">switchIfEmpty</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">fromCallable</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                notificationData<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="turms-gateway-1" tabindex="-1"><a class="header-anchor" href="#turms-gateway-1" aria-hidden="true">#</a> turms-gateway</h3><p><code>\u901A\u77E5</code>\u7ECF\u8FC7RPC\u7684\u8F6C\u53D1\u540E\uFF0Cturms-gateway\u9996\u5148\u4F1A\u5728<code>im.turms.gateway.domain.notification.service.NotificationService#sendNotificationToLocalClients(...)</code>\u51FD\u6570\u4E2D\u83B7\u5F97turms-service\u53D1\u6765\u7684<code>\u901A\u77E5</code>\u5B57\u8282\u6570\u636E\u3002\u8BE5\u51FD\u6570\u4F1A\u8C03\u7528<code>userSession.sendNotification(wrappedNotificationData, tracingContext)</code>\u5C06\u901A\u77E5\u6570\u636E\u53D1\u9001\u7ED9\u8BE5\u6279\u7528\u6237\u7684\u4F1A\u8BDD\u3002\u800C<code>sendNotification</code>\u51FD\u6570\u5C31\u662F\u4E4B\u524D\u6211\u4EEC\u8BA9\u8BFB\u8005\u91CD\u70B9\u6CE8\u610F\u7684\uFF0C\u5728<code>im.turms.gateway.access.client.common.UserSessionAssembler#bindConnectionWithSessionWrapper</code>\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u901A\u8FC7<code>out.sendObject</code>\u5B8C\u6210\u901A\u77E5\u7684\u5B57\u8282\u6570\u636E\u4E0B\u53D1\u3002\u5177\u4F53\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">UserSessionWrapper</span> sessionWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserSessionWrapper</span><span class="token punctuation">(</span>netConnection<span class="token punctuation">,</span> address<span class="token punctuation">,</span> closeIdleConnectionAfterSeconds<span class="token punctuation">,</span>
        userSession <span class="token operator">-&gt;</span> userSession<span class="token punctuation">.</span><span class="token function">setNotificationConsumer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">,</span> tracingContext<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            turmsNotificationBuffer<span class="token punctuation">.</span><span class="token function">touch</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            turmsNotificationBuffer <span class="token operator">=</span> turmsNotificationBuffer<span class="token punctuation">.</span><span class="token function">duplicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">NettyOutbound</span> outbound <span class="token operator">=</span> isWebSocketConnection
                    <span class="token operator">?</span> out<span class="token punctuation">.</span><span class="token function">sendObject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BinaryWebSocketFrame</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">:</span> out<span class="token punctuation">.</span><span class="token function">sendObject</span><span class="token punctuation">(</span>turmsNotificationBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>outbound<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> <span class="token function">handleConnectionError</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> netConnection<span class="token punctuation">,</span> userSession<span class="token punctuation">,</span> tracingContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81F3\u6B64\uFF0C<code>\u901A\u77E5</code>\u53D1\u9001\u5B8C\u6BD5\u3002</p><h2 id="\u96C6\u7FA4\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u96C6\u7FA4\u5B9E\u73B0" aria-hidden="true">#</a> \u96C6\u7FA4\u5B9E\u73B0</h2>`,12),I=s("\u5728\u9605\u8BFB\u4E0B\u8FF0\u6E90\u7801\u524D\uFF0C\u5EFA\u8BAE\u8BFB\u8005\u5148\u9605\u8BFB"),M={href:"https://turms-im.github.io/docs/for-developers/cluster.html",target:"_blank",rel:"noopener noreferrer"},O=s("\u96C6\u7FA4\u7684\u8BBE\u8BA1\u4E0E\u5B9E\u73B0"),F=s("\uFF0C\u7406\u89E3\u96C6\u7FA4\u670D\u52A1\u7684\u57FA\u672C\u8BBE\u8BA1\u4E0E\u804C\u8D23\u3002"),P=t('<h3 id="\u670D\u52A1\u6CE8\u518C\u4E0E\u53D1\u73B0" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u6CE8\u518C\u4E0E\u53D1\u73B0" aria-hidden="true">#</a> \u670D\u52A1\u6CE8\u518C\u4E0E\u53D1\u73B0</h3><p>TODO</p><h3 id="\u7F51\u7EDC\u8FDE\u63A5\u670D\u52A1" tabindex="-1"><a class="header-anchor" href="#\u7F51\u7EDC\u8FDE\u63A5\u670D\u52A1" aria-hidden="true">#</a> \u7F51\u7EDC\u8FDE\u63A5\u670D\u52A1</h3><p>TODO</p><h3 id="rpc" tabindex="-1"><a class="header-anchor" href="#rpc" aria-hidden="true">#</a> RPC</h3><p>\u672C\u6587\u5C06\u7EE7\u7EED\u4EE5\u5728\u4E0A\u6587<code>\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5904\u7406\u6D41\u7A0B</code>\u63D0\u5230\u7684RPC\u8BF7\u6C42\u793A\u4F8B\u8FDB\u884C\u8BB2\u89E3\uFF0C\u5373\uFF1Aturms-gateway\u5411turms-service\u53D1\u9001<code>HandleServiceRequest</code>\u8FD9\u4E00RPC\u8BF7\u6C42\u3002</p><h4 id="handleservicerequest\u7684rpc\u53D1\u9001\u7AEF" tabindex="-1"><a class="header-anchor" href="#handleservicerequest\u7684rpc\u53D1\u9001\u7AEF" aria-hidden="true">#</a> HandleServiceRequest\u7684RPC\u53D1\u9001\u7AEF</h4><h5 id="uml\u987A\u5E8F\u56FE-2" tabindex="-1"><a class="header-anchor" href="#uml\u987A\u5E8F\u56FE-2" aria-hidden="true">#</a> UML\u987A\u5E8F\u56FE</h5>',8),W=t(`<h5 id="\u4E1A\u52A1\u5C42" tabindex="-1"><a class="header-anchor" href="#\u4E1A\u52A1\u5C42" aria-hidden="true">#</a> \u4E1A\u52A1\u5C42</h5><p>\u63A5\u7740\u4E0A\u6587\uFF0Cturms-gateway\u4F1A\u901A\u8FC7<code>im.turms.gateway.domain.servicerequest.service.ServiceRequestService#handleServiceRequest(...)</code>\u51FD\u6570\u5411turms-service\u53D1\u9001<code>HandleServiceRequest</code>\uFF0C\u800C\u8BE5\u51FD\u6570\u4F1A\u8C03\u7528RPC\u670D\u52A1\u7684<code>RpcService#requestResponse</code>\u51FD\u6570\uFF0C\u5C06RPC\u8BF7\u6C42\u7684\u5904\u7406\u903B\u8F91\u4EE3\u7406\u7ED9\u4E0B\u6E38RPC\u670D\u52A1\u6267\u884C\uFF0C\u5177\u4F53\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TurmsNotification</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleServiceRequest</span><span class="token punctuation">(</span><span class="token class-name">ServiceRequest</span> serviceRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// Validate</span>
        <span class="token class-name">Long</span> userId <span class="token operator">=</span> serviceRequest<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DeviceType</span> deviceType <span class="token operator">=</span> serviceRequest<span class="token punctuation">.</span><span class="token function">getDeviceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">UserSession</span> session<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            session <span class="token operator">=</span> sessionService<span class="token punctuation">.</span><span class="token function">getLocalUserSession</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> deviceType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">ResponseException</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ResponseStatusCode</span><span class="token punctuation">.</span><span class="token constant">INVALID_REQUEST</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>session <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">ResponseExceptionPublisherPool</span><span class="token punctuation">.</span><span class="token function">sendRequestFromNonExistingSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Update heartbeat</span>
        sessionService<span class="token punctuation">.</span><span class="token function">updateHeartbeatTimestamp</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Forward request</span>
        serviceRequest<span class="token punctuation">.</span><span class="token function">getTurmsRequestBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">retain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HandleServiceRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandleServiceRequest</span><span class="token punctuation">(</span>serviceRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> node<span class="token punctuation">.</span><span class="token function">getRpcService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">requestResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">defaultIfEmpty</span><span class="token punctuation">(</span><span class="token constant">REQUEST_RESPONSE_NO_CONTENT</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>response <span class="token operator">-&gt;</span> <span class="token function">getNotificationFromResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> serviceRequest<span class="token punctuation">.</span><span class="token function">getRequestId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        serviceRequest<span class="token punctuation">.</span><span class="token function">getTurmsRequestBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="rpc\u5C42\u2014\u2014\u903B\u8F91\u5C42" tabindex="-1"><a class="header-anchor" href="#rpc\u5C42\u2014\u2014\u903B\u8F91\u5C42" aria-hidden="true">#</a> RPC\u5C42\u2014\u2014\u903B\u8F91\u5C42</h5><p>\u7531\u4E8E\u51FD\u6570\u8C03\u7528\u65B9\u5E76\u6CA1\u6709\u6307\u5B9A<code>HandleServiceRequest</code>\u8BF7\u6C42\u7684RPC\u63A5\u6536\u8282\u70B9\uFF0C\u56E0\u6B64<code>requestResponse</code>\u51FD\u6570\u4F1A\u9996\u5148\u901A\u8FC7<code>im.turms.server.common.infra.cluster.service.rpc.RpcService#getOtherActiveConnectedMembersToRespond</code>\u51FD\u6570\uFF0C\u83B7\u5F97\u4E00\u6279\u53EF\u4EE5\u5904\u7406\u8BE5RPC\u8BF7\u6C42\u7684\u8282\u70B9\uFF0C\u5728\u5224\u65AD\u5B8C\u8FD9\u4E9B\u8282\u70B9\u7684\u5065\u5EB7\u72B6\u6001\u540E\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5065\u5EB7\u7684\u8282\u70B9\uFF0C\u5219\u629B\u5F02\u5E38\uFF0C\u5426\u5219\u518D\u5C06\u8FD9RPC\u8BF7\u6C42\u901A\u8FC7<code>im.turms.server.common.infra.cluster.service.codec.CodecService#serializeWithoutCodecId</code>\u7F16\u7801\u6210\u5B57\u8282\u6570\u636E\uFF0C\u5E76\u901A\u8FC7<code>endpoint.sendRequest(request, requestBody)</code>\u8FD9\u4E00\u51FD\u6570\uFF0C\u5C06\u5B57\u8282\u6570\u636E\u4EA4\u7531\u4E0B\u6E38\u7684\u7F51\u7EDC\u5C42\u8FDB\u884C\u53D1\u9001\u3002<code>requestResponse0</code>\u7684\u5177\u4F53\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">requestResponse0</span><span class="token punctuation">(</span><span class="token class-name">RpcEndpoint</span> endpoint<span class="token punctuation">,</span>
                             <span class="token class-name">RpcRequest</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> request<span class="token punctuation">,</span>
                             <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Duration</span> timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">assertCurrentNodeIsAllowedToSend</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        timeout <span class="token operator">=</span> defaultRequestTimeoutDuration<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> mono <span class="token operator">=</span> <span class="token class-name">Mono</span>
            <span class="token punctuation">.</span><span class="token function">deferContextual</span><span class="token punctuation">(</span>context <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">addTraceIdToRequestFromContext</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">ByteBuf</span> requestBody<span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    requestBody <span class="token operator">=</span> codecService<span class="token punctuation">.</span><span class="token function">serializeWithoutCodecId</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    request<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>&quot;<span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">encode</span> the
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> endpoint<span class="token punctuation">.</span><span class="token function">sendRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> requestBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">timeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token constant">METRICS_NAME_RPC_REQUEST</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token constant">METRICS_TAG_REQUEST_NAME</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token constant">METRICS_TAG_REQUEST_TARGET_NODE_ID</span><span class="token punctuation">,</span> endpoint<span class="token punctuation">.</span><span class="token function">getNodeId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Tag</span> tag <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mono <span class="token operator">=</span> mono<span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span>tag<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tag<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> mono
            <span class="token punctuation">.</span><span class="token function">metrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">onErrorMap</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> <span class="token function">mapThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="rpc\u5C42\u2014\u2014\u7F51\u7EDC\u5C42" tabindex="-1"><a class="header-anchor" href="#rpc\u5C42\u2014\u2014\u7F51\u7EDC\u5C42" aria-hidden="true">#</a> RPC\u5C42\u2014\u2014\u7F51\u7EDC\u5C42</h5><p>RPC\u8BF7\u6C42\u5728\u88AB\u4E0A\u6E38RPC\u903B\u8F91\u5C42\u7F16\u7801\u6210\u5B57\u8282\u6570\u636E\u540E\uFF0C\u4F1A\u88AB\u4F20\u9012\u7ED9<code>im.turms.server.common.infra.cluster.service.rpc.RpcEndpoint#sendRequest</code>\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u4F1A\u901A\u8FC7<code>RpcFrameEncoder.INSTANCE.encodeRequest(request, requestBody)</code>\u518D\u7ED9\u8BE5\u5B57\u8282\u6570\u636Eappend\u4E0A<code>\u8BF7\u6C42\u7C7B\u578BID</code>\u4E0E<code>\u8BF7\u6C42ID</code>\u8FD9\u4E24\u4E2A\u5B57\u8282\u6570\u636E\uFF0C\u4EE5\u8BA9RPC\u5BF9\u7AEF\u80FD\u591F\u6839\u636E<code>\u8BF7\u6C42\u7C7B\u578BID</code>\u8FDB\u884C\u89E3\u7801\uFF0C\u5E76\u901A\u8FC7<code>\u8BF7\u6C42ID</code>\u8FD4\u56DE\u5BF9\u5E94\u7684\u54CD\u5E94\uFF0C\u5E76\u6700\u7EC8\u53D1\u9001\u5B57\u8282\u6D41\u6570\u636E\u7ED9RPC\u5BF9\u7AEF\u3002<code>sendRequest</code>\u5177\u4F53\u4EE3\u7801\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">sendRequest</span><span class="token punctuation">(</span><span class="token class-name">RpcRequest</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> request<span class="token punctuation">,</span> <span class="token class-name">ByteBuf</span> requestBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ChannelOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> conn <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestBody<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IllegalReferenceCountException</span><span class="token punctuation">(</span><span class="token string">&quot;The request body has been released&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>conn<span class="token punctuation">.</span><span class="token function">isDisposed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        requestBody<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClosedChannelException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Sinks<span class="token punctuation">.</span>One</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> sink <span class="token operator">=</span> <span class="token class-name">Sinks</span><span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> requestId <span class="token operator">=</span> <span class="token function">generateRandomId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Sinks<span class="token punctuation">.</span>One</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> previous <span class="token operator">=</span> pendingRequestMap<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>requestId<span class="token punctuation">,</span> sink<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>previous <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        request<span class="token punctuation">.</span><span class="token function">setRequestId</span><span class="token punctuation">(</span>requestId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuf</span> buffer<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            buffer <span class="token operator">=</span> <span class="token class-name">RpcFrameEncoder</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">.</span><span class="token function">encodeRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> requestBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            requestBody<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolveRequest</span><span class="token punctuation">(</span>requestId<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to encode request&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        conn<span class="token punctuation">.</span><span class="token function">sendObject</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> <span class="token function">resolveRequest</span><span class="token punctuation">(</span>requestId<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sink<span class="token punctuation">.</span><span class="token function">asMono</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81F3\u6B64\uFF0CRPC\u53D1\u9001\u7AEF\u7684\u5904\u7406\u6D41\u7A0B\u5C31\u7ED3\u675F\u4E86\u3002</p><p>\u7279\u522B\u4E00\u63D0\u7684\u662F\uFF1A\u4E4B\u6240\u4EE5<code>\u8BF7\u6C42ID</code>\u6CA1\u6709\u5728\u4E0A\u6E38\u5C31\u88AB\u7F16\u7801\uFF0C\u8FD9\u662F\u56E0\u4E3A\u90E8\u5206RPC\u8BF7\u6C42\u6709\u53EF\u80FD\u88AB\u53D1\u9001\u7ED9\u591A\u4E2ARPC\u63A5\u6536\u7AEF\uFF0C\u5982\u7FA4\u6D88\u606F\u5C31\u7ECF\u5E38\u88AB\u8F6C\u53D1\u7ED9\u591A\u4E2Aturms-gateway\u670D\u52A1\u7AEF\uFF0C\u800C\u901A\u8FC7\u5206\u522B\u7F16\u7801\uFF0C\u5C31\u53EF\u4EE5\u8BA9\u4E0A\u6E38\u4F20\u6765\u7684\u5B57\u8282\u6570\u636E\u88AB\u5171\u4EAB\uFF0C\u65E0\u9700\u5185\u5B58\u62F7\u8D1D\uFF0C\u6781\u5927\u5730\u63D0\u5347\u5185\u5B58\u4F7F\u7528\u7387\uFF0C\u8FD9\u4E5F\u662F\u4E3A\u4EC0\u4E48Turms\u8981\u81EA\u7814RPC\u670D\u52A1\u7684\u539F\u56E0\u4E4B\u4E00\u3002</p><h5 id="handleservicerequest\u7684rpc\u63A5\u6536\u7AEF" tabindex="-1"><a class="header-anchor" href="#handleservicerequest\u7684rpc\u63A5\u6536\u7AEF" aria-hidden="true">#</a> HandleServiceRequest\u7684RPC\u63A5\u6536\u7AEF</h5><p>TODO</p>`,13);function j(U,L){const e=o("ExternalLinkIcon"),p=o("Mermaid");return i(),u("div",null,[r,d,k,n("ol",null,[n("li",null,[v,n("a",m,[f,a(e)]),b,n("a",h,[g,a(e)]),y]),R,q]),S,a(p,{id:"mermaid-382ee227",code:"flowchart%20LR%0A%20%20%20%20access--%3Edomain%0A%20%20%20%20domain--%3Estorage%0A%20%20%20%20access--%3Einfra%0A%20%20%20%20domain--%3Einfra%0A%20%20%20%20storage--%3Einfra%0A%20%20%20%20%0A%20%20%20%20subgraph%20domain%0A%20%20%20%20%20%20%20%20subgraph%20user%2Fgroup%2Fmessage%2F...%0A%20%20%20%20%20%20%20%20%20%20%20%20domain-access(access)--%3Eadmin%0A%20%20%20%20%20%20%20%20%20%20%20%20domain-access(access)--%3Eclient%2Fservicerequest%0A%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20admin--%3Eadmin-controller(controller)--%3Eservice%0A%20%20%20%20%20%20%20%20%20%20%20%20admin--%3Eadmin-dto(dto)%0A%20%20%20%20%20%20%20%20%20%20%20%20admin--%3Eadmin-others(...)%0A%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20client%2Fservicerequest--%3Econtroller--%3Eservice%0A%20%20%20%20%20%20%20%20%20%20%20%20client%2Fservicerequest--%3E...%0A%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20service--%3Erepository%0A%20%20%20%20%20%20%20%20%20%20%20%20service--%3Emanager%0A%20%20%20%20%20%20%20%20%20%20%20%20service--%3Ebo%0A%20%20%20%20%20%20%20%20%20%20%20%20service--%3Erpc%0A%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20repository--%3Epo%0A%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20model%0A%20%20%20%20%20%20%20%20end%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20storage%0A%20%20%20%20%20%20%20%20mongo%0A%20%20%20%20%20%20%20%20redis%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20infra%0A%20%20%20%20%20%20%20%20cluster%0A%20%20%20%20%20%20%20%20config%0A%20%20%20%20%20%20%20%20logging%0A%20%20%20%20%20%20%20%20metrics%0A%20%20%20%20%20%20%20%20...%0A%20%20%20%20end%0A"}),C,n("p",null,[w,n("a",E,[T,a(e)]),A]),_,B,N,a(p,{id:"mermaid-64a568da",code:"sequenceDiagram%0A%20%20%20%20actor%20C%20as%20Client%0A%20%20%20%20actor%20R%20as%20Recipient%0A%20%20%20%20participant%20G%20as%20turms-gateway%0A%20%20%20%20participant%20S%20as%20turms-service%0A%20%20%20%20C-%3E%3E%2BG%3A%20TurmsRequest%0A%20%20%20%20alt%20Request%20for%20turms-service%0A%20%20%20%20%20%20%20%20G-%3E%3E%2BS%3A%20HandleServiceRequest%0A%20%20%20%20%20%20%20%20S--%3E%3EG%3A%20ServiceResponse%0A%20%20%20%20%20%20%20%20S--)-G%3A%20SendNotificationRequest%0A%20%20%20%20end%0A%20%20%20%20G--%3E%3EC%3A%20TurmsNotification%0A%20%20%20%20G--)-R%3A%20TurmsNotification%0A"}),x,a(p,{id:"mermaid-64a55fb0",code:"sequenceDiagram%0A%20%20%20%20participant%20S%20as%20turms-service%0A%20%20%20%20participant%20G%20as%20turms-gateway%0A%20%20%20%20actor%20R%20as%20Recipient%0A%20%20%20%20S-%3E%3E%2BG%3A%20SendNotificationRequest%0A%20%20%20%20G--)R%3A%20TurmsNotification%0A%20%20%20%20G--%3E%3E-S%3A%20hasSentNotificationToOneRecipient%0A"}),D,n("p",null,[I,n("a",M,[O,a(e)]),F]),P,a(p,{id:"mermaid-64a5592e",code:"sequenceDiagram%0A%20%20%20%20participant%20S%20as%20ServiceRequestService%0A%20%20%20%20participant%20R%20as%20RpcService%0A%20%20%20%20participant%20D%20as%20DiscoveryService%0A%20%20%20%20participant%20C%20as%20CodecService%0A%20%20%20%20participant%20E%20as%20RpcEndpoint%0A%20%20%20%20participant%20F%20as%20RpcFrameEncoder%0A%20%20%20%20participant%20O%20as%20ChannelOperations%0A%20%20%20%20S-%3E%3ER%3A%20handleServiceRequest%0A%20%20%20%20R-%3E%3ED%3A%20getOtherActiveConnectedMembers%0A%20%20%20%20D--%3E%3ER%3A%20otherActiveConnectedMembers(List%3CMember%3E)%0A%20%20%20%20R-%3E%3EC%3A%20serializeWithoutCodecId%0A%20%20%20%20C--%3E%3ER%3A%20requestBody%20(ByteBuf)%0A%20%20%20%20R-%3E%3EE%3A%20sendRequest%0A%20%20%20%20E-%3E%3EF%3A%20encodeRequest%0A%20%20%20%20F--%3E%3EE%3A%20requestBuffer(ByteBuf)%0A%20%20%20%20E-%3E%3EO%3A%20sendObject%0A"}),W])}const G=c(l,[["render",j],["__file","code.html.vue"]]);export{G as default};
