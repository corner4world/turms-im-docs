import{_ as t,M as p,p as o,q as c,R as s,t as n,N as l,a1 as a}from"./framework-7f102627.js";const r={},i=a(`<h1 id="turms-client-js共享上下文" tabindex="-1"><a class="header-anchor" href="#turms-client-js共享上下文" aria-hidden="true">#</a> turms-client-js共享上下文</h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>由于Turms服务端不支持也没计划支持：一个用户在同一个端同时建立多个会话。因此如果一个用户在浏览器打开多个标签页，并试图以<strong>相同的用户ID与设备类型</strong>进行登陆时，那么有且仅有一个会话可以建立成功。从浏览器角度来看，就是有且仅有一个标签页能够登陆成功。该场景适用于一般的社交应用。</p><h2 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景" aria-hidden="true">#</a> 适用场景</h2><p>但部分IM场景需要支持：从用户角度来看，用户只需在一个页面登陆一次，那么其他标签页也就处于登陆状态了，在所有标签页里的Turms客户端都能以相同的用户身份，发送请求、接收消息与通知。适用于客服系统等场景。</p><p>为了支持上述场景，需要使用<code>共享上下文</code>。具体而言，对于在不同标签页的同域（同协议；同域名；同端口）、同用户ID且同设备类型的Turms客户端，它们可以共享与Turms服务端的WebSocket连接与一些已登陆用户的信息。</p><p>提醒：因为只有同域名、同用户ID且同设备类型的Turms客户端才共享上下文，因此您的客户端可以以不同的用户身份登陆不同的标签页，以支持类似“部分标签页共享A用户的会话，部分标签页共享B用户的会话”的特性。</p><h2 id="开启方法" tabindex="-1"><a class="header-anchor" href="#开启方法" aria-hidden="true">#</a> 开启方法</h2><p>turms-client-js默认不开启共享上下文功能，而如果您的产品需要使用该功能，可以通过在创建<code>TurmsClient</code>实例时，传递一个<code>useSharedContext: true</code>开启。具体代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TurmsClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">useSharedContext</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果<code>useSharedContext</code>为<code>true</code>，但用户的浏览器并不支持<code>Shared Web Workers</code>，则<code>new TurmsClient()</code>会直接抛异常。</p><p>如果您想要提前知道当前浏览器是否支持共享上下文，您可以调用：<code>TurmsClient.isSharedContextSupported()</code>，该函数返回<code>boolean</code>，<code>true</code>即支持，<code>false</code>即不支持。</p><p>注意事项：</p><ul><li>如果开启<code>共享上下文</code>功能，那么您将不再能自行直接调用<code>client.driver.connectionService#connect</code>函数（通常情况下，用户也不需要直接调用该底层函数）。除此之外，您无需为适配共享上下文功能修改其他逻辑代码。</li></ul><h2 id="支持的浏览器版本" tabindex="-1"><a class="header-anchor" href="#支持的浏览器版本" aria-hidden="true">#</a> 支持的浏览器版本</h2>`,15),u=s("code",null,"Shared Web Workers",-1),d={href:"https://caniuse.com/sharedworkers",target:"_blank",rel:"noopener noreferrer"},k=a(`<h2 id="具体代码示例" tabindex="-1"><a class="header-anchor" href="#具体代码示例" aria-hidden="true">#</a> 具体代码示例</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// On the first tab of the same origin</span>
<span class="token comment">// The client will create a new WebSocket connection</span>
<span class="token keyword">var</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TurmsClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">useSharedContext</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
client<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">userId</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">deviceType</span><span class="token operator">:</span> DeviceType<span class="token punctuation">.</span><span class="token constant">BROWSER</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// On the second tab of the same origin</span>
<span class="token comment">// The client will share the WebSocket connection with the first tab</span>
<span class="token keyword">var</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TurmsClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">useSharedContext</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
client<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">userId</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">deviceType</span><span class="token operator">:</span> DeviceType<span class="token punctuation">.</span><span class="token constant">BROWSER</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// On the third tab of the same origin</span>
<span class="token comment">// The client will create a new WebSocket connection because it uses a new device type</span>
<span class="token keyword">var</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TurmsClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">useSharedContext</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
client<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">userId</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">deviceType</span><span class="token operator">:</span> DeviceType<span class="token punctuation">.</span><span class="token constant">ANDROID</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function v(m,h){const e=p("ExternalLinkIcon");return o(),c("div",null,[i,s("p",null,[n("由于turms-client-js采用"),u,n("实现共享上下文，因此版本要求同"),s("a",d,[n("Shared Web Workers"),l(e)]),n("。")]),k])}const y=t(r,[["render",v],["__file","client-turms-client-js.html.vue"]]);export{y as default};
