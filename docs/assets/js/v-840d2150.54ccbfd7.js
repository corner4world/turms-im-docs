"use strict";(self.webpackChunkturms_docs=self.webpackChunkturms_docs||[]).push([[613],{5487:(n,s,a)=>{a.r(s),a.d(s,{default:()=>C});var t=a(6252);const p=(0,t.uE)('<h1 id="客户端接口" tabindex="-1"><a class="header-anchor" href="#客户端接口" aria-hidden="true">#</a> 客户端接口</h1><p>Turms客户端目前支持JavaScript、Kotlin与Swift这三种语言，对外暴露一致的接口，并且表现为一致的行为。各语言版本之间的部分接口参数可能出现不完全一致的情况，这主要体现在：1. 接口采用更贴近当前语言特性及习惯的参数与语法；2. turms-client-js独有的用于服务降级配置的参数与接口。</p><p>由于Turms各语言客户端行为具有高度的一致性，因此如果您基于上述任意一种语言进行业务开发，您可以在代码逻辑不做改变的情况下，轻松将已写好的业务代码翻译为另外两种语言（具体可参考在本文结尾处的示例）。</p><p>（之后还会支持C#与C++，其他语言暂不在考虑范围内）</p><h2 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick Start</h2><ol><li>克隆Turms仓库（目前客户端代码均未发布到第三方依赖仓库中）。参考命令：git clone --depth 1 https://github.com/turms-im/turms.git</li><li>在您的项目中，引入对应的客户端文件</li><li>编写业务逻辑</li></ol><h2 id="版本要求" tabindex="-1"><a class="header-anchor" href="#版本要求" aria-hidden="true">#</a> 版本要求</h2><p>Turms客户端对版本的最低要求，主要是根据：平台全球市场占有率、平台TLSv1.2最低支持版本与代码实现的优雅程度，三个因素来考量。另外，Turms不提供对TLSv1与TLSv1.1等被时代淘汰协议的官方支持。</p>',8),e=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",null,"平台"),(0,t._)("th",null,"支持的最低版本"),(0,t._)("th",null,"原因"),(0,t._)("th")])],-1),o=(0,t._)("tr",null,[(0,t._)("td",null,"Android"),(0,t._)("td",null,"21+"),(0,t._)("td",null,"考虑到21+的市场占有率与代码实现优雅程度，故支持21+"),(0,t._)("td")],-1),c=(0,t._)("td",null,"iOS",-1),l=(0,t._)("td",null,"12.0+",-1),i=(0,t.Uk)("考虑到"),u={href:"https://developer.apple.com/support/app-store/",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("iOS 12.0+在全球的市场占有率"),k=(0,t.Uk)("以及苹果产品用户的习惯，turms-client-swift采用NWConnection实现TCP协议，因此设备版本的要求等同于支持"),m=(0,t._)("code",null,"NWConnection",-1),d=(0,t.Uk)("设备的版本要求。"),b=(0,t._)("br",null,null,-1),g=(0,t.Uk)("另外，turms-client-swift不会考虑用古老的"),h=(0,t._)("code",null,"CFStreamCreatePairWithSocketToHost",-1),f=(0,t.Uk)("来实现TCP协议。"),v=(0,t._)("td",null,null,-1),S=(0,t._)("td",null,"浏览器",-1),T={href:"https://caniuse.com/?search=websocket",target:"_blank",rel:"noopener noreferrer"},q=(0,t.Uk)("支持WebSocket协议的浏览器"),w=(0,t._)("td",null,[(0,t.Uk)("对于IE系列浏览器，turms-client-js仅对IE 11提供官方支持。"),(0,t._)("br"),(0,t.Uk)("另外，turms-client-js不会将WebSocket降级为轮询机制")],-1),y=(0,t._)("td",null,null,-1),x=(0,t._)("tr",null,[(0,t._)("td",null,"桌面端"),(0,t._)("td",null,[(0,t.Uk)("turms-client-kotlin(JDK8+)"),(0,t._)("br"),(0,t.Uk)("turms-client-js(Node.js 8+)")]),(0,t._)("td",null,[(0,t.Uk)("如果您采用turms-client-kotlin实现，则要求JDK版本为8(+)，因为JDK 8+默认提供对TLSv1.2的支持。"),(0,t._)("br"),(0,t.Uk)("如果您采用turms-client-js实现，则Turms提供对Node.js 8+的官方支持")]),(0,t._)("td")],-1),_=(0,t.uE)('<p>补充</p><ul><li>为实现快速迭代，turms-client-swift仍暂时使用WebSocket协议，但未来替换为纯TCP协议实现。此变动不会影响上述的版本要求</li><li>turms-client-kotlin采用的是<code>Socket</code>，而非<code>SocketChannel</code>。其中最主要的原因是：Android SDK不对<code>SocketChannel</code>提供一套标准的TLS协议实现，需要自行实现。考虑到安卓系统的五花八门且系统功能本身就比较受限（尤其相比服务端实现），自行实现TLS协议极易导致各种意料之外的Bugs，故使用<code>Socket</code>以采用官方的TLS协议实现。</li></ul><h2 id="客户端的对外逻辑结构" tabindex="-1"><a class="header-anchor" href="#客户端的对外逻辑结构" aria-hidden="true">#</a> 客户端的对外逻辑结构</h2><ul><li>TurmsClient：Turms客户端唯一直接对外暴露的类，一个TurmsClient实例代表着一个客户端与服务端之间的会话连接。以下变量是TurmsClient对外的成员变量。 <ul><li><p>driver：TurmsClient的运行驱动。负责连接的开起关闭、底层数据的发送接收与心跳控制等基础性操作。以下介绍到的Service层类都基于driver运作。</p></li><li><p>userService：用户相关服务。负责如用户登陆、添加好友、添加关系人分组、发送/处理好友请求、查询附近的用户等操作。</p></li><li><p>groupService：群组相关服务。负责如创建群组、变更群主、修改群成员角色、修改群信息等操作。</p></li><li><p>messageService：消息相关服务。负责如发送消息、修改已发送消息、查询各类消息与其状态、撤回消息等操作。</p></li><li><p>notificationService：通知相关服务。负责接受与响应业务层面上的通知（即：其他用户向该用户发送好友请求、群组成员上下线等通知）。 提醒：消息（message）不算做业务层面上的“通知”（notification），因此notificationService不会处理用户消息，用户消息仅由messageService进行处理。而driver中TurmsNotification的“通知”概念指的是网络层面上的Turms服务端给Turms客户端的通知，因此notificationService也不会处理底层的TurmsNotification数据。</p><p>补充：关于通知功能的开启与关闭，您可以在turms服务端<code>im.turms.server.common.property.env.service.business.NotificationProperties</code>处，实时地进行修改。</p></li><li><p>storageService：存储相关服务（可选拓展）。负责用户头像、群组头像与消息附件的上传与下载操作。补充：该服务为turms的拓展服务，因此若您希望使用该功能，您需要将turms-plugin-minio或您自行实现的存储插件集成到turms服务端当中。</p></li></ul></li></ul><h3 id="service类的返回值" tabindex="-1"><a class="header-anchor" href="#service类的返回值" aria-hidden="true">#</a> Service类的返回值</h3><p>与Turms服务端交互的所有Turms客户端接口都<strong>基于异步模型编写</strong>。turms-client-js使用Promise模型，turms-client-kotlin使用Coroutines模型，而turms-client-swift使用Promise模型（由PromiseKit提供）。</p><p>各种Service类可以对Turms所提供的业务模型进行增删改查操作。您需要了解其返回值种类，以开发您自己的业务代码。</p><h4 id="对于状态码为2xxx的响应" tabindex="-1"><a class="header-anchor" href="#对于状态码为2xxx的响应" aria-hidden="true">#</a> 对于状态码为2xxx的响应</h4><ul><li>对于增加业务模型的函数，如果该函数的返回值被声明为一个异步模型（如：Promise&lt;string&gt;），则返回的泛型（如前文的string类型）的值必定不为空，否则会抛出一个状态码为MISSING_DATA的错误（TurmsBusinessError），表明本应该存在的数据点丢失。若出现该错误，则意味着Turms的服务端或客户端自身存在行为不一致的Bug。</li><li>对于删除与更新业务模型的函数，它们均返回被异步模型包裹的Void类型（如：Promise&lt;Void&gt;）。</li><li>对于查找业务模型的函数，如果该类函数返回被异步模型包裹的List类型，则当服务端返回空数据时，该查找操作函数会返回一个空List，而非null或undefined。如果被包裹的类型不是List类型，则当服务端返回空数据时，该查找操作函数会返回一个undefined（JavaScript）或null（Kotlin）或nil（Swift）。特例：answerGroupQuestions方法可以算做查询方法，但其返回数据永不为空。</li></ul><h4 id="对于状态非2xxx的响应" tabindex="-1"><a class="header-anchor" href="#对于状态非2xxx的响应" aria-hidden="true">#</a> 对于状态非2xxx的响应</h4><p>对于Service类而言，这类响应均被认作是“错误”状态响应。通过异步模型抛出TurmsBusinessException，并在该错误模型中包括了具体状态码与错误原因。</p><h3 id="主要接口差异-拓展知识" tabindex="-1"><a class="header-anchor" href="#主要接口差异-拓展知识" aria-hidden="true">#</a> 主要接口差异（拓展知识）</h3><p>通常情况下，您并不需要关心各客户端接口之间的差异，但如果您的团队需要由一名开发者基于多个Turms客户端进行上层的开发工作，或者您需要对照您项目的上层客户端代码实现的异同，您可以了解一下客户端间主要接口的不同。</p><p>在早期Turms客户端实现中，各客户端之间的接口参数与数据模型是尽量保持统一的参数配置与含义，如时间表达相关的参数。但这种强行统一的写法不符合目标语言习惯。同时考虑到在大部分情况下，各客户端的上层业务代码通常有专人负责，而非全由一名开发者负责，统一含义意义不大，并且这些差异也符合目标语言习惯，故不进行强制统一。</p><p>客户端主要接口的差异如下表：</p><table><thead><tr><th></th><th>JavaScript客户端</th><th>Kotlin客户端</th><th>Swift客户端</th><th>实例</th></tr></thead><tbody><tr><td>时间表达单位</td><td>一律为毫秒</td><td>一律为毫秒</td><td>采用TimeInterval（即秒）</td><td>connectTimeout</td></tr><tr><td>业务异常模型</td><td>TurmsBusinessError（继承自Error）</td><td>TurmsBusinessException（继承自不携带栈信息的RuntimeException）</td><td>TurmsBusinessError（继承自Error）</td><td></td></tr><tr><td>异步模型</td><td>Promise模型</td><td>Coroutines模型</td><td>由PromiseKit提供的Promise模型</td><td></td></tr></tbody></table><p>补充：对于对外暴露的回调函数实现，Turms的Swift客户端没有采用Swift常见的delegate代理模式，而是和其他语言客户端一样通过函数传递逃逸闭包。</p><h2 id="会话的生命周期" tabindex="-1"><a class="header-anchor" href="#会话的生命周期" aria-hidden="true">#</a> 会话的生命周期</h2><p>Turms客户端的会话生命周期比较容易理解，具体而言：先通过<code>driver.connect()</code>进行网络层的连接，而后通过<code>userService.login()</code>进行业务层面上的登录操作，在登录成功后，对应的会话就建立了。最后再通过<code>userService.logout()</code>方法向服务端发送会话关闭通知，同时也会关闭网络层连接。</p><p>为了保持逻辑简单，也方便上层开发者自行组合各种逻辑。Turms不提供诸如自动重连、自动路由跳转等操作，一方面开发者可以很容易地实现该类逻辑，另一方面，这类“隐藏”的内部逻辑会使得上层开发者难以把控底层驱动行为，在一些时候反而会成为绊脚石。</p><p>拓展：如同WebSocket基于关闭帧的会话关闭机制，Turms服务端在关闭会话时，也会通过一个会话关闭信令来通知客户端该会话已关闭，并在信令被Flushed后，通知底层WebSocket/TCP关闭连接。Turms服务端不需要等待客户端对会话关闭信令的任何响应，客户端也不会向服务端发送有关会话关闭信令的响应。</p><h3 id="生命周期回调钩子" tabindex="-1"><a class="header-anchor" href="#生命周期回调钩子" aria-hidden="true">#</a> 生命周期回调钩子</h3><table><thead><tr><th>层次</th><th>名称</th><th>调用时机</th><th>提醒</th></tr></thead><tbody><tr><td>网络层</td><td>driver.addOnConnectedListener</td><td>当网络层连接建立时</td><td>通常您并不需要通过<code>addOnConnectedListener</code>来添加连接监听事件，<br>而是将您的回调函数赋给<code>driver.connect()</code>返回的异步成功回调onSucccess/then</td></tr><tr><td>网络层</td><td>driver.addOnDisconnectedListener</td><td>当网络层连接断开时</td><td></td></tr><tr><td>业务逻辑层</td><td>userService.addOnOnlineListener</td><td>当会话建立/用户上线时</td><td>通常您并不需要通过<code>addOnOnlineListener</code>来添加上线监听事件，<br>而是将您的回调函数赋给<code>userService.login()</code>返回的异步成功回调onSucccess/then</td></tr><tr><td>业务逻辑层</td><td>userService.addOnOfflineListener</td><td>当会话断开/用户下线时</td><td></td></tr></tbody></table><h2 id="业务逻辑的认证与授权" tabindex="-1"><a class="header-anchor" href="#业务逻辑的认证与授权" aria-hidden="true">#</a> 业务逻辑的认证与授权</h2><p>对于客户端发来的权限信息，Turms服务端的态度是“客户端传来的权限信息均不可信”，因此Turms服务端会根据您在Turms服务端处所设定的业务配置，自行做各种必要的权限判断。</p><p>以“修改已发送消息”功能为例，该行为会触发一系列判定逻辑。Turms会先判断目标消息是否确实是由该用户发出的，再根据您在Turms服务端配置的allowEditingMessageBySender（默认为true），来判断是否允许用户修改已发送消息，若您设置其为false，则在客户端处会捕获到一个TurmsBusinessException（Kotlin）或TurmsBusinessError（JavaScript/Swift）对象，而它由业务状态码模型TurmsStatusCode表示（由code与reason描述信息组成）。</p><p>再比如对于一个“简单”的“发送消息”请求，Turms服务端就会判断该消息发送用户是否处于激活状态、是否设置了“允许发送消息给陌生人（非关系人）”、消息发送者是否在黑名单中。如果接收方是群组，那么消息发送者是否是群成员，并且是否处于禁言状态等等逻辑判断。而您仅仅只需调用一个sendMessage接口即可。</p><h2 id="与服务端通信时使用的数据格式" tabindex="-1"><a class="header-anchor" href="#与服务端通信时使用的数据格式" aria-hidden="true">#</a> 与服务端通信时使用的数据格式</h2><p>对于一般请求与响应而言：</p><ul><li>基于纯TCP协议实现的客户端：varint编码的正文长度 + 正文（Protobuf编码的<code>TurmsNotification</code>或<code>TurmsRequest</code>）</li><li>基于WebSocket协议实现的客户端：正文（Protobuf编码的<code>TurmsNotification</code>或<code>TurmsRequest</code>）。正文的字节长度信息通过底层的WebSocket Frame传输</li></ul><p>对于心跳请求而言：</p><ul><li>基于纯TCP协议实现的客户端：一个长度为1字节的数值<code>0</code>数据。这里的数值<code>0</code>其实是指“该Payload的长度在varint编码下为一字节长度的0”，即Payload为0字节。</li><li>基于WebSocket协议实现的客户端：一个正文为空（0字节）的Binary类型消息</li></ul><p>补充：Turms不通过WebSocket的PING/PONG来实现心跳的原因是：</p><ul><li>各浏览器WebSocket实现的PING消息发送时间间隔不同</li><li>上层代码无法控制PING/PONG的行为，甚至无法感知行为的发生</li><li>网络层面的心跳逻辑不应该和应用层的心跳耦合</li></ul><h2 id="具体示例" tabindex="-1"><a class="header-anchor" href="#具体示例" aria-hidden="true">#</a> 具体示例</h2><p>以下示例包括turms-client-js/kotlin/swift三个版本，并且其作用等价。具体包括了以下业务操作：初始化客户端、登录、监听会话连接断开（下线）、监听通知、监听新消息、查询附近的用户、发送消息、创建群组操作。</p><h3 id="体验实例的准备工作" tabindex="-1"><a class="header-anchor" href="#体验实例的准备工作" aria-hidden="true">#</a> 体验实例的准备工作</h3><ul><li>方案一：在application.yaml配置文件中更新以下配置： <ol><li>将<code>turms.gateway.session.enable-authentication</code>设置为false（取消用户登录认证）</li><li>将<code>turms.service.message.allow-sending-messages-to-stranger</code>也设置为true（允许没有用户关系的用户互相发送消息）</li></ol></li><li>方案二：使用自带<code>dev</code>profile配置。因为Turms提供的<code>dev</code>profile已做了上述配置。默认情况下，Turms发布包中的application.yaml的profile字段为空，即默认的profile不是<code>dev</code>，需要您手动配置为<code>dev</code>。</li></ul><p>提醒：以下客户端API为最新版本示例，而目前Playground上的Turms服务端（http://playground.turms.im:9510）为老版本，因此如果您直接连接Playground的服务端，可以会出现数据不一致的问题。</p><h3 id="turms-client-js版本" tabindex="-1"><a class="header-anchor" href="#turms-client-js版本" aria-hidden="true">#</a> turms-client-js版本</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Initialize client</span>\n<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TurmsClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// new TurmsClient(&#39;ws://any-turms-gateway-server.com&#39;);</span>\n\n<span class="token comment">// Listen to the offline event</span>\nclient<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">addOnOfflineListener</span><span class="token punctuation">(</span><span class="token parameter">info</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">onOffline: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>closeStatus<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>businessStatus<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>info<span class="token punctuation">.</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Listen to inbound notifications</span>\nclient<span class="token punctuation">.</span>notificationService<span class="token punctuation">.</span><span class="token function">addNotificationListener</span><span class="token punctuation">(</span><span class="token parameter">notification</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">onNotification: Receive a notification from other users or server: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>notification<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Listen to inbound messages</span>\nclient<span class="token punctuation">.</span>messageService<span class="token punctuation">.</span><span class="token function">addMessageListener</span><span class="token punctuation">(</span><span class="token parameter">message</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">onMessage: Receive a message from other users or server: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nclient<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        client<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">queryNearbyUsers</span><span class="token punctuation">(</span>\n            <span class="token number">139.667651</span><span class="token punctuation">,</span>\n            <span class="token number">35.792657</span><span class="token punctuation">,</span>\n            <span class="token number">100</span><span class="token punctuation">,</span>\n            <span class="token number">10</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">users</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">nearby users: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        client<span class="token punctuation">.</span>messageService<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>\n            <span class="token boolean">false</span><span class="token punctuation">,</span>\n            <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>\n            <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token string">&#39;Hello Turms&#39;</span><span class="token punctuation">,</span>\n            <span class="token keyword">null</span><span class="token punctuation">,</span>\n            <span class="token number">30</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">id</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">message </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> has been sent</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        client<span class="token punctuation">.</span>groupService<span class="token punctuation">.</span><span class="token function">createGroup</span><span class="token punctuation">(</span>\n            <span class="token string">&#39;Turms Developers Group&#39;</span><span class="token punctuation">,</span>\n            <span class="token string">&#39;This is a group for the developers who are interested in Turms&#39;</span><span class="token punctuation">,</span>\n            <span class="token string">&#39;nope&#39;</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">id</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">group </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> has been created</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h3 id="turms-client-kotlin版本" tabindex="-1"><a class="header-anchor" href="#turms-client-kotlin版本" aria-hidden="true">#</a> turms-client-kotlin版本</h3><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token comment">// Initialize client</span>\n<span class="token keyword">val</span> client <span class="token operator">=</span> <span class="token function">TurmsClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// TurmsClient(&quot;127.0.0.1&quot;, 11510)</span>\n\n<span class="token comment">// Listen to the offline event</span>\nclient<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">addOnOfflineListener</span> <span class="token punctuation">{</span> info <span class="token operator">-&gt;</span>\n    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;onOffline: <span class="token interpolation"><span class="token delimiter variable">${</span>info<span class="token punctuation">.</span>closeStatus<span class="token delimiter variable">}</span></span>:<span class="token interpolation"><span class="token delimiter variable">${</span>info<span class="token punctuation">.</span>businessStatus<span class="token delimiter variable">}</span></span>:<span class="token interpolation"><span class="token delimiter variable">${</span>info<span class="token punctuation">.</span>reason<span class="token delimiter variable">}</span></span>&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Listen to inbound notifications</span>\nclient<span class="token punctuation">.</span>notificationService<span class="token punctuation">.</span><span class="token function">addNotificationListener</span> <span class="token punctuation">{</span> notification <span class="token operator">-&gt;</span>\n    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;onNotification: Receive a notification from other users or server: <span class="token interpolation variable">$notification</span>&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Listen to inbound messages</span>\nclient<span class="token punctuation">.</span>messageService<span class="token punctuation">.</span><span class="token function">addMessageListener</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> _ <span class="token operator">-&gt;</span>\n    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;onMessage: Receive a message from other users or server: <span class="token interpolation variable">$message</span>&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">try</span> <span class="token punctuation">{</span>\n    client<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> Exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">val</span> users <span class="token operator">=</span> client<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">queryNearbyUsers</span><span class="token punctuation">(</span>\n    <span class="token number">139.667651f</span><span class="token punctuation">,</span>\n    <span class="token number">35.792657f</span><span class="token punctuation">,</span>\n    <span class="token number">100</span><span class="token punctuation">,</span>\n    <span class="token number">10</span>\n<span class="token punctuation">)</span>\n<span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;nearby users: [${users.joinToString(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)}]&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">val</span> msgId <span class="token operator">=</span> client<span class="token punctuation">.</span>messageService<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>\n    <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Hello Turms&quot;</span><span class="token punctuation">,</span>\n    <span class="token keyword">null</span><span class="token punctuation">,</span>\n    <span class="token number">30</span>\n<span class="token punctuation">)</span>\n<span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;message <span class="token interpolation variable">$msgId</span> has been sent&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">val</span> groupId <span class="token operator">=</span> client<span class="token punctuation">.</span>groupService<span class="token punctuation">.</span><span class="token function">createGroup</span><span class="token punctuation">(</span>\n    <span class="token string">&quot;Turms Developers Group&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;This is a group for the developers who are interested in Turms&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;nope&quot;</span>\n<span class="token punctuation">)</span>\n<span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;group <span class="token interpolation variable">$groupId</span> has been created&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h3 id="turms-client-swift版本" tabindex="-1"><a class="header-anchor" href="#turms-client-swift版本" aria-hidden="true">#</a> turms-client-swift版本</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>\n<span class="token comment">// Initialize client</span>\n<span class="token keyword">let</span> client <span class="token operator">=</span> <span class="token class-name">TurmsClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// TurmsClient(&quot;ws://any-turms-gateway-server.com&quot;)</span>\n\n<span class="token comment">// Listen to the offline event</span>\nclient<span class="token punctuation">.</span>userService<span class="token punctuation">.</span>addOfflineListener <span class="token punctuation">{</span> <span class="token punctuation">(</span>info<span class="token punctuation">:</span> <span class="token class-name">SessionCloseInfo</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;onSessionDisconnected: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">info<span class="token punctuation">.</span>closeStatus</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">:</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">info<span class="token punctuation">.</span>businessStatus <span class="token operator">??</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">:</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">info<span class="token punctuation">.</span>reason <span class="token operator">??</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Listen to inbound notifications</span>\nclient<span class="token punctuation">.</span>notificationService<span class="token punctuation">.</span>addNotificationListener <span class="token punctuation">{</span> <span class="token punctuation">(</span>notification<span class="token punctuation">:</span> <span class="token class-name">TurmsRequest</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;onNotification: Receive a notification from other users or server: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token keyword">try</span><span class="token operator">!</span> notification<span class="token punctuation">.</span><span class="token function">jsonString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Listen to inbound messages</span>\nclient<span class="token punctuation">.</span>messageService<span class="token punctuation">.</span>addMessageListener<span class="token punctuation">{</span> <span class="token punctuation">(</span>message<span class="token punctuation">:</span> <span class="token class-name">Message</span><span class="token punctuation">,</span> <span class="token omit keyword">_</span><span class="token punctuation">:</span> <span class="token class-name">MessageAddition</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;onMessage: Receive a message from other users or server: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token keyword">try</span><span class="token operator">!</span> message<span class="token punctuation">.</span><span class="token function">jsonString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nclient<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>userId<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;123&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span>done <span class="token punctuation">{</span>\n        client<span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">queryNearbyUsers</span><span class="token punctuation">(</span>\n                latitude<span class="token punctuation">:</span> <span class="token number">139.667651</span><span class="token punctuation">,</span>\n                longitude<span class="token punctuation">:</span> <span class="token number">35.792657</span><span class="token punctuation">,</span>\n                distance<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n                maxNumber<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span>done <span class="token punctuation">{</span>\n                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;nearby users: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token short-argument">$0</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        client<span class="token punctuation">.</span>messageService<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>\n                isGroupMessage<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                toId<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                deliveryDate<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                text<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Hello Turms&quot;</span></span><span class="token punctuation">,</span>\n                records<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span>\n                burnAfter<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span>done <span class="token punctuation">{</span>\n                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;message </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token short-argument">$0</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> has been sent&quot;</span></span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        client<span class="token punctuation">.</span>groupService<span class="token punctuation">.</span><span class="token function">createGroup</span><span class="token punctuation">(</span>\n                name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Turms Developers Group&quot;</span></span><span class="token punctuation">,</span>\n                intro<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;This is a group for the developers who are interested in Turms&quot;</span></span><span class="token punctuation">,</span>\n                announcement<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;nope&quot;</span></span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span>done <span class="token punctuation">{</span>\n                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;group </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token short-argument">$0</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> has been created&quot;</span></span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token keyword">catch</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div>',45),L={},C=(0,a(3744).Z)(L,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("table",null,[e,(0,t._)("tbody",null,[o,(0,t._)("tr",null,[c,l,(0,t._)("td",null,[i,(0,t._)("a",u,[r,(0,t.Wm)(a)]),k,m,d,b,g,h,f]),v]),(0,t._)("tr",null,[S,(0,t._)("td",null,[(0,t._)("a",T,[q,(0,t.Wm)(a)])]),w,y]),x])]),_],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,t]of s)n[a]=t;return n}},719:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-840d2150",path:"/for-developers/client-api.html",title:"客户端接口",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Quick Start",slug:"quick-start",children:[]},{level:2,title:"版本要求",slug:"版本要求",children:[]},{level:2,title:"客户端的对外逻辑结构",slug:"客户端的对外逻辑结构",children:[{level:3,title:"Service类的返回值",slug:"service类的返回值",children:[]},{level:3,title:"主要接口差异（拓展知识）",slug:"主要接口差异-拓展知识",children:[]}]},{level:2,title:"会话的生命周期",slug:"会话的生命周期",children:[{level:3,title:"生命周期回调钩子",slug:"生命周期回调钩子",children:[]}]},{level:2,title:"业务逻辑的认证与授权",slug:"业务逻辑的认证与授权",children:[]},{level:2,title:"与服务端通信时使用的数据格式",slug:"与服务端通信时使用的数据格式",children:[]},{level:2,title:"具体示例",slug:"具体示例",children:[{level:3,title:"体验实例的准备工作",slug:"体验实例的准备工作",children:[]},{level:3,title:"turms-client-js版本",slug:"turms-client-js版本",children:[]},{level:3,title:"turms-client-kotlin版本",slug:"turms-client-kotlin版本",children:[]},{level:3,title:"turms-client-swift版本",slug:"turms-client-swift版本",children:[]}]}],filePathRelative:"for-developers/client-api.md",git:{updatedTime:1641164649e3}}}}]);