const l=JSON.parse('{"key":"v-215eb32c","path":"/for-developers/system-resource-management.html","title":"系统资源管理","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"内存管理","slug":"内存管理","link":"#内存管理","children":[{"level":3,"title":"JVM基础内存知识","slug":"jvm基础内存知识","link":"#jvm基础内存知识","children":[]},{"level":3,"title":"可控内存（Managed Memory）的使用","slug":"可控内存-managed-memory-的使用","link":"#可控内存-managed-memory-的使用","children":[]},{"level":3,"title":"内存健康检测","slug":"内存健康检测","link":"#内存健康检测","children":[]},{"level":3,"title":"关于Valhalla项目——Codes like a class, works like an int","slug":"关于valhalla项目——codes-like-a-class-works-like-an-int","link":"#关于valhalla项目——codes-like-a-class-works-like-an-int","children":[]}]},{"level":2,"title":"线程","slug":"线程","link":"#线程","children":[{"level":3,"title":"CPU健康监控","slug":"cpu健康监控","link":"#cpu健康监控","children":[]},{"level":3,"title":"Turms线程列表","slug":"turms线程列表","link":"#turms线程列表","children":[]},{"level":3,"title":"线程模型","slug":"线程模型","link":"#线程模型","children":[]},{"level":3,"title":"判断任意一行代码在哪个线程组上执行的方法","slug":"判断任意一行代码在哪个线程组上执行的方法","link":"#判断任意一行代码在哪个线程组上执行的方法","children":[]},{"level":3,"title":"关于Loom项目——Codes like sync, works like async","slug":"关于loom项目——codes-like-sync-works-like-async","link":"#关于loom项目——codes-like-sync-works-like-async","children":[]}]}],"git":{"updatedTime":1677802399000},"filePathRelative":"for-developers/system-resource-management.md"}');export{l as data};
