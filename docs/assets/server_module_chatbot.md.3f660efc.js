import{_ as e,o as t,c as s,U as a}from"./chunks/framework.95a60cb2.js";const g=JSON.parse('{"title":"Chatbot","description":"","frontmatter":{},"headers":[],"relativePath":"server/module/chatbot.md","filePath":"server/module/chatbot.md"}'),r={name:"server/module/chatbot.md"},o=a(`<h1 id="chatbot" tabindex="-1">Chatbot <a class="header-anchor" href="#chatbot" aria-label="Permalink to &quot;Chatbot&quot;">​</a></h1><h2 id="turms-plugin-rasa" tabindex="-1">turms-plugin-rasa <a class="header-anchor" href="#turms-plugin-rasa" aria-label="Permalink to &quot;turms-plugin-rasa&quot;">​</a></h2><h3 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h3><p>turms-plugin-rasa is a plugin implementation of the turms-service chatbot based on the open-source conversational AI framework <a href="https://rasa.com" target="_blank" rel="noreferrer">Rasa</a>.</p><p>The workflow of turms-plugin-rasa is simple: it forwards messages sent by users to the Rasa server, and then sends the response returned by the Rasa server to the user in the form of a message.</p><h3 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h3><ul><li><a href="https://rasa.com/docs/rasa/installation/installing-rasa-open-source" target="_blank" rel="noreferrer">Installation of the Rasa server</a></li><li><a href="https://turms-im.github.io/docs/server/development/plugin#loading-plugins" target="_blank" rel="noreferrer">Methods for loading plugins</a></li></ul><h3 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h3><table><thead><tr><th>Configuration Item</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>turms-plugin.rasa.enabled</td><td>true</td><td>Whether to activate the plugin</td></tr><tr><td>turms-plugin.rasa.instances[?].chatbot-user-id</td><td>0</td><td>When a user sends a message to this user ID, the message is forwarded to the Rasa server</td></tr><tr><td>turms-plugin.rasa.instances[?].url</td><td><code>http://localhost:5005/webhooks/rest/webhook</code></td><td>The address of the Rasa server that receives user messages</td></tr><tr><td>turms-plugin.rasa.instances[?].request.timeoutMillis</td><td>60_000</td><td>Request timeout duration (in milliseconds)</td></tr><tr><td>turms-plugin.rasa.instances[?].response.format</td><td><code>PLAIN</code></td><td>When set to <code>PLAIN</code>, the <code>text</code> field in the response from the Rasa server will be sent directly to the user as a message;<br>When set to <code>JSON</code>, the response from the Rasa server will be first serialized into JSON format text, and then sent to the user as a message. See below for the specific JSON format.</td></tr><tr><td>turms-plugin.rasa.instances[?].response.delimiter</td><td><code>\\n</code></td><td>When <code>format</code> is set to <code>PLAIN</code> and the user sends one message to the Rasa server but the Rasa server returns multiple responses, the specified string will be used as the delimiter between the <code>text</code> fields in the responses.</td></tr><tr><td>turms-plugin.rasa.instances[?].response.persist</td><td><code>DEFAULT</code></td><td>Whether to persist messages generated based on the responses of the Rasa server.<br>If set to <code>TRUE</code>, it means persisting;<br>If set to <code>FALSE</code>, it means not persisting;<br>If set to <code>DEFAULT</code>, it means judging based on the property <code>turms.service.message.persist-message</code>.</td></tr></tbody></table><p>The JSON format of the message sent to the user is:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;string&gt;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">image</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;string&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre></div>`,11),n=[o];function l(i,d,c,p,h,u){return t(),s("div",null,n)}const f=e(r,[["render",l]]);export{g as __pageData,f as default};
