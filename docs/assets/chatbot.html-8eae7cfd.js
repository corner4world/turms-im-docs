import{_ as r,M as d,p as o,q as i,R as t,t as a,N as s,a1 as n}from"./framework-7f102627.js";const c={},l=n('<h1 id="聊天机器人" tabindex="-1"><a class="header-anchor" href="#聊天机器人" aria-hidden="true">#</a> 聊天机器人</h1><h2 id="turms-plugin-rasa" tabindex="-1"><a class="header-anchor" href="#turms-plugin-rasa" aria-hidden="true">#</a> turms-plugin-rasa</h2><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>',3),u={href:"https://rasa.com",target:"_blank",rel:"noopener noreferrer"},p=t("p",null,"turms-plugin-rasa的工作流程很简单，即：将用户发送的消息转发给Rasa服务端，等Rasa服务端返回响应后，Turms服务端再将响应以消息的形式发送给用户。",-1),h=t("h3",{id:"安装",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),a(" 安装")],-1),m={href:"https://rasa.com/docs/rasa/installation/installing-rasa-open-source",target:"_blank",rel:"noopener noreferrer"},_={href:"https://turms-im.github.io/docs/for-developers/plugin.html#%E6%8F%92%E4%BB%B6%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},b=n(`<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><table><thead><tr><th>配置项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>turms-plugin.rasa.enabled</td><td>true</td><td>是否启动插件</td></tr><tr><td>turms-plugin.rasa.instances[?].chatbot-user-id</td><td>0</td><td>当用户发送消息给该用户ID时，将消息转发给Rasa服务端</td></tr><tr><td>turms-plugin.rasa.instances[?].url</td><td><code>http://localhost:5005/webhooks/rest/webhook</code></td><td>用于接收用户消息的Rasa服务端地址</td></tr><tr><td>turms-plugin.rasa.instances[?].request.timeoutMillis</td><td>60_000</td><td>请求超时时长（毫秒）</td></tr><tr><td>turms-plugin.rasa.instances[?].response.format</td><td><code>PLAIN</code></td><td>为<code>PLAIN</code>时，Rasa服务端响应中的<code>text</code>文本字段将会被直接作为消息，发送给用户；<br>为<code>JSON</code>时，Rasa服务端响应会先被序列化成JSON格式文本，再作为消息，发送给用户。JSON具体格式见下文。</td></tr><tr><td>turms-plugin.rasa.instances[?].response.delimiter</td><td><code>\\n</code></td><td>当上述<code>format</code>为<code>PLAIN</code>，且用户发送给Rasa服务端一条消息，而Rasa服务端返回多个响应时，使用该字符串作为响应<code>text</code>文本字段之间的分隔符</td></tr></tbody></table><p>发送给用户的消息的JSON文本格式为：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> &lt;string&gt;<span class="token punctuation">,</span>
        <span class="token property">&quot;image&quot;</span><span class="token operator">:</span> &lt;string&gt;
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    ...
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function g(v,f){const e=d("ExternalLinkIcon");return o(),i("div",null,[l,t("p",null,[a("turms-plugin-rasa是一个基于开源对话式AI框架"),t("a",u,[a("Rasa"),s(e)]),a("而开发的turms-service聊天机器人实现插件。")]),p,h,t("ul",null,[t("li",null,[t("a",m,[a("Rasa服务端安装"),s(e)])]),t("li",null,[t("a",_,[a("插件的加载方式"),s(e)])])]),b])}const x=r(c,[["render",g],["__file","chatbot.html.vue"]]);export{x as default};
